<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>stm32学习笔记003</title>
      <link href="/2024/10/21/stm3203/"/>
      <url>/2024/10/21/stm3203/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h2 id="任务（1）：串⼝中断接收回显"><a href="#任务（1）：串⼝中断接收回显" class="headerlink" title="任务（1）：串⼝中断接收回显"></a>任务（1）：串⼝中断接收回显</h2><h3 id="知识学习（技术点介绍——-通信协议-双工模式）"><a href="#知识学习（技术点介绍——-通信协议-双工模式）" class="headerlink" title="知识学习（技术点介绍——&gt;通信协议&#x2F;双工模式）"></a>知识学习（技术点介绍——&gt;通信协议&#x2F;双工模式）</h3><h4 id="通信的目的-协议"><a href="#通信的目的-协议" class="headerlink" title="通信的目的&#x2F;协议"></a>通信的目的&#x2F;协议</h4><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241021105006393.png" alt="image-20241021105006393"></p><ul><li><p>在stm32内部，pwm输出，定时器计数等功能，都是在单片机内部的输出寄存器，数据寄存器实现的</p></li><li><p>在stm32外部，想要使用其他的外挂的芯片，就要与stm32<strong>进行通信</strong></p></li><li><p>协议：双方约定的用于通信的规则</p></li><li><p>USART     TX： Transmit Exchange 数据发送    RX: Receive Exchange 数据接收 </p></li><li><p>I2C            SCL： 时钟          SDA：数据</p></li><li><p>SPI            SCLK：时钟         MOSI：主机输出数据脚       MISO： 主机输入数据脚       CS：片选，用于指定通信对象</p></li><li><p>CAN          CAN-H   CAN_L：两个差分数据脚，用两个引脚表示一个差分的数据</p></li><li><p>USB          DP  DM，或者脚D+   D-, 也是一对差分数据脚</p></li></ul><h4 id="双工模式的区别："><a href="#双工模式的区别：" class="headerlink" title="双工模式的区别："></a>双工模式的区别：</h4><ul><li>全双工：是指通信双方能够同时进行双向通信，一般来说都有两根通信线</li><li>半双工：同一时刻 只能进行单方向的通信 （同一时间下只能进行单向传输，但是不同的时间传输的方向可以不同）</li><li>单工： 无论什么时刻，都只能由一个设备传到另一个设备，不能反着来 （比如把串口的rx引脚去掉，那串口就退化成单工了）</li></ul><h4 id="时钟特性"><a href="#时钟特性" class="headerlink" title="时钟特性"></a>时钟特性</h4><ul><li>如果有单独的时钟信号线，就是同步的，没有就是异步的</li><li>异步相比于同步，只是说两个设备之间时钟的信息（采样频率）不能传递罢了，所以在开始前设置好两者约定的采样频率，并添加帧头帧尾等，进行采样位置的对齐</li></ul><h4 id="电平特性"><a href="#电平特性" class="headerlink" title="电平特性"></a>电平特性</h4><ul><li>单端：单端电平所谓的高低电平，都是相对于gnd的，因此单端通信的双方必须<strong>共地</strong>，因此，前三个通信协议严格来说引脚一栏还要加上GND引脚</li><li>差分：差分信号是通过两个信号的电压差来进行通信的，因此不需要接地（主要是说can，因为usb里面有些东西也是单端信号，还是得接地）</li></ul><h4 id="设备"><a href="#设备" class="headerlink" title="设备"></a>设备</h4><ul><li>点对点：两个设备之间点对点，直接传输就行了</li><li>多设备：支持不止有两个设备之间的通信，可以挂载多个设备，在通信前要进行<strong>寻址</strong>操作，来确定要进行通信的对象</li></ul><h3 id="技术点介绍——-串口通信"><a href="#技术点介绍——-串口通信" class="headerlink" title="技术点介绍——&gt;串口通信"></a>技术点介绍——&gt;串口通信</h3><h5 id="硬件电路接法："><a href="#硬件电路接法：" class="headerlink" title="硬件电路接法："></a>硬件电路接法：</h5><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241021112612894.png" alt="image-20241021112612894" style="zoom: 33%;" /><p>电平标准（使用的主要都是ttl电平）</p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241021112838627.png" alt="image-20241021112838627" style="zoom: 33%;" /><h5 id="串口参数和时序"><a href="#串口参数和时序" class="headerlink" title="串口参数和时序"></a>串口参数和时序</h5><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241021113332364.png" alt="image-20241021113332364"></p><ul><li><p>注意，当串口空闲的时候，始终是高电平，起始位和终止位的作用就是：</p><p>起始位——产生一个下降沿，告诉设备要开始发数据了         </p><p>终止位——产生一个上升沿，标志着这个字节传输完成，同时将电平拉回高电平</p></li><li><p>数据位——低位先行的含义</p><p>假设要发送一个0x0F，第一步，首先把他转化成二进制 00001111 ，然后从低位开始传入，即传入顺序为11110000，产生的波形就是</p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241021113946893.png" alt="image-20241021113946893" style="zoom: 67%;" /><p>当然，接收的一方也是低位先行，产生的波形就是00001111，还是回到了0 x0F</p></li><li><p>校验位：</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241021114145525.png" alt="image-20241021114145525"></p></li></ul><p>校验分为奇校验和偶校验，奇校验就是自动补全最后一位，使<strong>数据位</strong>所有位置上的1为奇数个，偶校验是偶数个</p><h5 id="USTAR"><a href="#USTAR" class="headerlink" title="USTAR"></a>USTAR</h5><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241021130136230.png" alt="image-20241021130136230"></p><ul><li><p>最常使用配置：收发器：异步波特率：9600&#x2F;115200数据位长度：8停止位长度：1无校验</p></li><li><p>硬件流控制的意思，就是在rx和tx中还有一根线用于通信，这条线的的信号发射端是接收端设备，默认高电平</p><p>当接收端设备准备好接收的时候，就置低电平，发送端就开始发信号，这样能避免接如果收端性能比较低，还没准备好就接受一堆数据从而出错 ，但是硬件控制流一般也不用</p></li><li><p>usatr资源： usatr1在apb2总线上，usatr2，usatr3在apb1总线上</p></li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241021181937363.png" alt="image-20241021181937363"></p><p>USTAR基本结构：</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241021184406936.png" alt="image-20241021184406936"></p><h5 id="串口通信中的hex模式和文本模式"><a href="#串口通信中的hex模式和文本模式" class="headerlink" title="串口通信中的hex模式和文本模式"></a>串口通信中的hex模式和文本模式</h5><p>hex模式：以原始数据的形式展示</p><p>文本模式：以原始数据编码后的形式显示</p><p>示意图：</p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241022001324298.png" alt="image-20241022001324298" style="zoom: 67%;" /><h3 id="技术点介绍：串⼝-RXNE-中断（如何配置，如何使⽤）"><a href="#技术点介绍：串⼝-RXNE-中断（如何配置，如何使⽤）" class="headerlink" title="技术点介绍：串⼝ RXNE 中断（如何配置，如何使⽤）"></a>技术点介绍：串⼝ RXNE 中断（如何配置，如何使⽤）</h3><h4 id="配置exne中断："><a href="#配置exne中断：" class="headerlink" title="配置exne中断："></a>配置exne中断：</h4><p>配置中断，无非就是把当前蕴含某个可以当做中断事件的外设连接通路到nvic</p><p>比如之前的tim中断，就是使用tim2_it_config函数连接到nvic通路以配置中断</p><p>所以类似的，配置中断的第一步也是，配置usart1到nvic的通路</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">USART_ITConfig(USART1,USART_IT_RXNE,ENABLE);<span class="comment">//这句usatr1的itconfig配置了usatr1到nvic的通路</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下面就是常规的配置nvic</p><ul><li>先分组，默认一般使用group2</li><li>创建一个nvic初始化结构体，结构体包含channel，cmd，响应优先级和抢占优先级</li><li>channel（通道）：就具体通道而定，配置谁的nvic，就用谁的nvic到自身的通道，比如对于tim2来说，通道就是tim2_irqn,这里对于usart1来说，通道就是usart1_irqn</li><li>cmd：就是个开关，enable即可，两个优先级视情况而定</li><li>最后初始化nvic结构体，并开启usart开关</li></ul><p>关键代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//下面配置接收中断</span></span><br><span class="line">USART_ITConfig(USART1,USART_IT_RXNE,ENABLE);<span class="comment">//这句usatr1的itconfig配置了usatr1到nvic的通路</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面配置nvic</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//先分组</span></span><br><span class="line">NVIC_InitTypeDef NVIC_InitSturcture;</span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannel = USART1_IRQn; <span class="comment">//配置nvic的irqn通道</span></span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannelPreemptionPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitSturcture);</span><br><span class="line"></span><br><span class="line">USART_Cmd(USART1,ENABLE);<span class="comment">//打开开关</span></span><br></pre></td></tr></table></figure><p>这样，nvic就会自动调用中断函数，当中断函数里我们给出的条件为真时，就能只想我们想要的操作</p><h4 id="使用exne中断："><a href="#使用exne中断：" class="headerlink" title="使用exne中断："></a>使用exne中断：</h4><p>中断执行时最核心的代码就是中断执行函数：USART1_IRQHandler</p><p>因此我们配置一个判断条件，这里想用exne是否为真来进行判断，所以条件应设为</p><p>if(USART_GetITStatus(USART1,USART_IT_RXNE)&#x3D;&#x3D; SET)</p><p>如果这个条件为真，那么说明计算机向单片机发送了数据，我们此时的任务是<strong>接受这个数据，并把它回显到计算机上</strong>，那在中断函数中，我们可以设置一个标志位来标志单片机接收到了数据，再设置一个临时变量用于存储接收到的数据，在主函数中，如果标志位为真，那就把数据拿出来并发送到计算机上</p><p>在serial.c中，设置两个临时变量</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint8_t</span> Serial_RxData;</span><br><span class="line"><span class="type">uint8_t</span> Serial_RxFlag;</span><br></pre></td></tr></table></figure><p>两个封装函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint8_t</span> <span class="title function_">Serial_GetRxFlag</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Serial_RxFlag == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Serial_RxFlag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">Serial_GetRxData</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> Serial_RxData;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>并按照我们的设想配置中断函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">USART1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(USART_GetITStatus(USART1,USART_IT_RXNE)== SET)</span><br><span class="line">&#123;</span><br><span class="line">Serial_RxData = USART_ReceiveData(USART1);</span><br><span class="line">Serial_RxFlag = <span class="number">1</span>;</span><br><span class="line">USART_ClearITPendingBit(USART1,USART_IT_RXNE);<span class="comment">//清除标志位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样，我们就只需要在主函数中不断检查flag是否为1，如果为1，设置一个临时变量，并将它赋值为getrxdata函数的返回值，然后将这个返回值发回计算机，即可完成</p><p>主函数内关键代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">uint8_t</span> RxData;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">Serial_Init();</span><br><span class="line">Serial_Printf(<span class="string">&quot;num is %d&quot;</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Serial_GetRxFlag() == <span class="number">1</span>)<span class="comment">//判断flag是否为1</span></span><br><span class="line">&#123;</span><br><span class="line">RxData = Serial_GetRxData();<span class="comment">//是的话，获取信息</span></span><br><span class="line">Serial_Printf(<span class="string">&quot;%c&quot;</span>,RxData);<span class="comment">//回显</span></span><br><span class="line">OLED_ShowHexNum(<span class="number">1</span>,<span class="number">1</span>,RxData,<span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>serial.c总代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> Serial_RxData;</span><br><span class="line"><span class="type">uint8_t</span> Serial_RxFlag;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Serial_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);<span class="comment">//USATR1在APB2总线上</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP; <span class="comment">//tx设置为复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; <span class="comment">//rx设置为上拉输入（输入不存在复用不复用的，因为输出只能有一个，但是输入可以有多个）</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">USART_InitTypeDef USART_InitStructure;</span><br><span class="line">USART_InitStructure.USART_BaudRate = <span class="number">9600</span>; <span class="comment">//设置波特率</span></span><br><span class="line">USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None; <span class="comment">//设置没有硬件流控制</span></span><br><span class="line">USART_InitStructure.USART_Mode = USART_Mode_Rx|USART_Mode_Tx; <span class="comment">//设置模式为rx和tx都用</span></span><br><span class="line">USART_InitStructure.USART_Parity = USART_Parity_No; <span class="comment">//设置不进行奇偶校验</span></span><br><span class="line">USART_InitStructure.USART_StopBits = USART_StopBits_1;<span class="comment">//设置终止位长度位1</span></span><br><span class="line">USART_InitStructure.USART_WordLength = USART_WordLength_8b;<span class="comment">//设置数据长度为8位</span></span><br><span class="line"></span><br><span class="line">USART_Init(USART1,&amp;USART_InitStructure);<span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面配置接收中断</span></span><br><span class="line">USART_ITConfig(USART1,USART_IT_RXNE,ENABLE);<span class="comment">//这句usatr1的itconfig配置了usatr1到nvic的通路</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面配置nvic</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//先分组</span></span><br><span class="line">NVIC_InitTypeDef NVIC_InitSturcture;</span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannel = USART1_IRQn; <span class="comment">//配置nvic的irqn通道</span></span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannelPreemptionPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitSturcture);</span><br><span class="line"></span><br><span class="line">USART_Cmd(USART1,ENABLE);<span class="comment">//打开开关</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">Serial_GetRxFlag</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Serial_RxFlag == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Serial_RxFlag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">Serial_GetRxData</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> Serial_RxData;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">USART1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(USART_GetITStatus(USART1,USART_IT_RXNE)== SET)</span><br><span class="line">&#123;</span><br><span class="line">Serial_RxData = USART_ReceiveData(USART1);</span><br><span class="line">Serial_RxFlag = <span class="number">1</span>;</span><br><span class="line">USART_ClearITPendingBit(USART1,USART_IT_RXNE);<span class="comment">//清除标志位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Serial_SendByte</span><span class="params">(<span class="type">uint8_t</span> Byte)</span></span><br><span class="line">&#123;</span><br><span class="line">USART_SendData(USART1,Byte);</span><br><span class="line"><span class="keyword">while</span>(USART_GetFlagStatus(USART1,USART_FLAG_TXE) == RESET);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Serial_SendArray</span><span class="params">(<span class="type">uint8_t</span> *Array,<span class="type">uint16_t</span> length)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint16_t</span> i;</span><br><span class="line"><span class="keyword">for</span>(i =<span class="number">0</span>;i&lt;length;i++)</span><br><span class="line">&#123;</span><br><span class="line">Serial_SendByte(Array[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Serial_SendString</span><span class="params">(<span class="type">char</span>* String)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;String[i]!=<span class="number">0</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">Serial_SendByte(String[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint32_t</span> <span class="title function_">Serial_Pow</span><span class="params">(<span class="type">uint32_t</span> X, <span class="type">uint32_t</span> Y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint32_t</span> Result = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (Y --)</span><br><span class="line">&#123;</span><br><span class="line">Result *= X;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> Result;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Serial_SendNumber</span><span class="params">(<span class="type">uint32_t</span> Number, <span class="type">uint8_t</span> Length)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; Length; i ++)</span><br><span class="line">&#123;</span><br><span class="line">Serial_SendByte(Number / Serial_Pow(<span class="number">10</span>, Length - i - <span class="number">1</span>) % <span class="number">10</span> + <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">fputc</span><span class="params">(<span class="type">int</span> ch, FILE *f)</span></span><br><span class="line">&#123;</span><br><span class="line">Serial_SendByte(ch);<span class="comment">//将printf的底层重定向到自己的发送字节函数</span></span><br><span class="line"><span class="keyword">return</span> ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Serial_Printf</span><span class="params">(<span class="type">char</span> *format, ...)</span><span class="comment">//多参数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> String[<span class="number">100</span>];</span><br><span class="line">va_list arg;</span><br><span class="line">va_start(arg, format);</span><br><span class="line"><span class="built_in">vsprintf</span>(String, format, arg);</span><br><span class="line">va_end(arg);</span><br><span class="line">Serial_SendString(String);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="视频演示："><a href="#视频演示：" class="headerlink" title="视频演示："></a>视频演示：</h3><h2 id="2-任务二：串口控制LED亮灭"><a href="#2-任务二：串口控制LED亮灭" class="headerlink" title="(2)任务二：串口控制LED亮灭"></a>(2)任务二：串口控制LED亮灭</h2><h3 id="技术点介绍-：串⼝-RXNE-中断（如何利⽤读取到的数据）"><a href="#技术点介绍-：串⼝-RXNE-中断（如何利⽤读取到的数据）" class="headerlink" title="技术点介绍 ：串⼝ RXNE 中断（如何利⽤读取到的数据）"></a>技术点介绍 ：串⼝ RXNE 中断（如何利⽤读取到的数据）</h3><h4 id="使用数据包获取输入的数据："><a href="#使用数据包获取输入的数据：" class="headerlink" title="使用数据包获取输入的数据："></a>使用数据包获取输入的数据：</h4><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023161552791.png" alt="image-20241023161552791"></p><h5 id="1-什么是数据包？"><a href="#1-什么是数据包？" class="headerlink" title="1. 什么是数据包？"></a>1. 什么是数据包？</h5><p>在串口通信中，数据包是用来传输有结构的数据的一种“包装”。它就像寄快递一样，把我们要传输的信息（比如控制命令或传感器数据）装进一个“包裹”里，再通过串口把这个包裹从上位机（比如电脑）发到单片机（STM32）。数据包是为了让双方清楚地知道，传过来的这些数据是什么意思，如何处理，如何检查有没有出错。</p><h5 id="2-数据包的基本组成"><a href="#2-数据包的基本组成" class="headerlink" title="2. 数据包的基本组成"></a>2. 数据包的基本组成</h5><p>一个标准的数据包一般包括以下部分：</p><ol><li><strong>起始符</strong>：告诉接收端，“数据要开始了！”。这是一个特殊的字符或字节</li><li><strong>数据字段</strong>：这里才是实际有用的信息，可能是传感器的数据、控制命令或者状态反馈。数据字段可以是一个字节或多个字节。</li><li><strong>结束符</strong>：告诉接收端，“数据传完了！”。常用的结束符也是一个特定字符，</li><li>有时候，结束符前面还可以加个校验符</li></ol><p><strong>例子</strong>：假设你想通过串口传递两个字节的数据，我们可以构造一个简单的数据包：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">起始符@| 数据<span class="number">1</span>| 数据<span class="number">2</span>| 结束符 $</span><br></pre></td></tr></table></figure><p>在这个例子中：</p><ul><li><strong>@</strong> 是起始符</li><li>数据1 和 数据2 是实际要传输的数据</li><li><strong>$</strong> 是结束符</li></ul><h5 id="3-为什么要使用数据包？有什么好处？"><a href="#3-为什么要使用数据包？有什么好处？" class="headerlink" title="3. 为什么要使用数据包？有什么好处？"></a>3. 为什么要使用数据包？有什么好处？</h5><ul><li><strong>数据有序传输，避免混乱</strong>,串口通信是<strong>逐个字节</strong>地传输数据。如果没有数据包的概念，单片机无法知道接收到的某些字节到底是什么——是开始的命令还是中途传过来的数据？使用数据包后，起始符和结束符让STM32清楚地知道数据从哪里开始、哪里结束，避免了数据混乱。</li></ul><h5 id="4-使用数据包的步骤"><a href="#4-使用数据包的步骤" class="headerlink" title="4. 使用数据包的步骤"></a>4. 使用数据包的步骤</h5><p><strong>(1) 构造数据包并发送</strong></p><ul><li>上位机（比如电脑）根据预定好的格式，构造一个数据包。假如你想控制一个灯的亮灭，可以构造一个数据包，里面包括：设备ID（代表灯）、控制命令（开或关），以及校验位来保证数据没有出错。</li></ul><p><strong>(2) 接收数据包</strong></p><ul><li>STM32 会通过串口接收数据。在接收到数据时，它首先要找到起始符，确定这是一个新的数据包，然后开始接收后面的数据字段。如果有校验位，还能通过他来检查数据是否正确。</li></ul><p><strong>(4) 执行相应操作</strong></p><ul><li>解析完成后，STM32可以根据数据字段中的命令，执行对应的操作，比如打开或关闭灯，读取传感器数据等。</li></ul><h4 id="画状态机进行程序设计"><a href="#画状态机进行程序设计" class="headerlink" title="画状态机进行程序设计"></a>画状态机进行程序设计</h4><p><strong>在设计程序的时候，可以利用状态机来画出程序的流程，来理清逻辑</strong>，如下便是文本数据包接收的状态机示意图:</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023162516302.png" alt="image-20241023162516302"></p><h4 id="rxne中断的实现："><a href="#rxne中断的实现：" class="headerlink" title="rxne中断的实现："></a>rxne中断的实现：</h4><p><strong>核心：</strong></p><p>同任务一，中断执行时最核心的代码依然是是中断执行函数：USART1_IRQHandler，我们所需要的中断后引发的功能要在这里面配置</p><p><strong>方法：</strong></p><p>要想让stm32通过接收 ledoff 和ledon 来进行相应的操作，无非是把任务1接收数字的地方改成接收字符串数据包即可，接收数据包的程序按照状态机的画法设计，接收到数据以后，与LEDOFF LEDON这两个字符串进行比对，如果是同一个字符串，那就执行相应操作，对不上号的话就返回error</p><h5 id="总结一下步骤："><a href="#总结一下步骤：" class="headerlink" title="总结一下步骤："></a>总结一下步骤：</h5><ol><li>使能usart1时钟，gpio时钟，配置好gpio和usatr1的初始化结构体</li><li>使用usatr的itconfig函数打通rxne到nvic的通路</li><li>配置好nvic，设置好中断参数</li><li>编写USART1_IRQHandler函数，把中断函数执行步骤写好</li></ol><h3 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h3><h4 id="库函数："><a href="#库函数：" class="headerlink" title="库函数："></a>库函数：</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> Serial_RxPacket[<span class="number">100</span>];<span class="comment">//数据包数组</span></span><br><span class="line"><span class="type">uint8_t</span> Serial_RxFlag;<span class="comment">//数据包接受标志位</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Serial_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);<span class="comment">//USATR1在APB2总线上</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP; <span class="comment">//tx设置为复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; <span class="comment">//rx设置为上拉输入（输入不存在复用不复用的，因为输出只能有一个，但是输入可以有多个）</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">USART_InitTypeDef USART_InitStructure;</span><br><span class="line">USART_InitStructure.USART_BaudRate = <span class="number">9600</span>; <span class="comment">//设置波特率</span></span><br><span class="line">USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None; <span class="comment">//设置没有硬件流控制</span></span><br><span class="line">USART_InitStructure.USART_Mode = USART_Mode_Rx|USART_Mode_Tx; <span class="comment">//设置模式为rx和tx都用</span></span><br><span class="line">USART_InitStructure.USART_Parity = USART_Parity_No; <span class="comment">//设置不进行奇偶校验</span></span><br><span class="line">USART_InitStructure.USART_StopBits = USART_StopBits_1;<span class="comment">//设置终止位长度位1</span></span><br><span class="line">USART_InitStructure.USART_WordLength = USART_WordLength_8b;<span class="comment">//设置数据长度为8位</span></span><br><span class="line"></span><br><span class="line">USART_Init(USART1,&amp;USART_InitStructure);<span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面配置接收中断</span></span><br><span class="line">USART_ITConfig(USART1,USART_IT_RXNE,ENABLE);<span class="comment">//这句usatr1的itconfig配置了usatr1到nvic的通路</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面配置nvic</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//先分组</span></span><br><span class="line">NVIC_InitTypeDef NVIC_InitSturcture;</span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannel = USART1_IRQn; <span class="comment">//配置nvic的irqn通道</span></span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannelPreemptionPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitSturcture);</span><br><span class="line"></span><br><span class="line">USART_Cmd(USART1,ENABLE);<span class="comment">//打开开关</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">Serial_GetRxFlag</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Serial_RxFlag == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Serial_RxFlag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">USART1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> RxState = <span class="number">0</span>;<span class="comment">//当前状态机状态的静态变量，出函数之后不会销毁，下次用的时候保持上次用最后的值</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> pRxPacket = <span class="number">0</span>;<span class="comment">//当前接收数据位置的静态变量</span></span><br><span class="line"><span class="keyword">if</span> (USART_GetITStatus(USART1, USART_IT_RXNE) == SET)<span class="comment">//是否是USART1的接收触发中断</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RxData = USART_ReceiveData(USART1);<span class="comment">//读取数据寄存器，存放在接收的数据变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据状态机画的图编写下面的程序：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//rxstate为0，接收数据包包头</span></span><br><span class="line"><span class="keyword">if</span> (RxState == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (RxData == <span class="string">&#x27;@&#x27;</span> &amp;&amp; Serial_RxFlag == <span class="number">0</span>)<span class="comment">//数据是包头，并且上一个数据包已处理完了</span></span><br><span class="line">&#123;</span><br><span class="line">RxState = <span class="number">1</span>;<span class="comment">//下面接受数据</span></span><br><span class="line">pRxPacket = <span class="number">0</span>;<span class="comment">//数据包的位置归零，开始挨个往里塞</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//restate为1，接收数据包数据，同时判断是否接收到了第一个包尾</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (RxState == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (RxData == <span class="string">&#x27;\r&#x27;</span>)<span class="comment">//如果收到第一个包尾</span></span><br><span class="line">&#123;</span><br><span class="line">RxState = <span class="number">2</span>;<span class="comment">//置下一个状态</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//接收到了正常的数据</span></span><br><span class="line">&#123;</span><br><span class="line">Serial_RxPacket[pRxPacket] = RxData;<span class="comment">//数据存入数据包数组的对应的位置</span></span><br><span class="line">pRxPacket ++;<span class="comment">//标记下一次该存放的位置</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//rxstate为2，接收数据包第二个包尾</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (RxState == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (RxData == <span class="string">&#x27;\n&#x27;</span>)<span class="comment">//如果收到第二个包尾</span></span><br><span class="line">&#123;</span><br><span class="line">RxState = <span class="number">0</span>;<span class="comment">//状态归0</span></span><br><span class="line">Serial_RxPacket[pRxPacket] = <span class="string">&#x27;\0&#x27;</span>;<span class="comment">//将收到的字符数据包添加一个字符串结束标志（不然不会自带）</span></span><br><span class="line">Serial_RxFlag = <span class="number">1</span>;<span class="comment">//rxflag为1，成功接收一个数据包</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">USART_ClearITPendingBit(USART1, USART_IT_RXNE);<span class="comment">//清除标志位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="主函数"><a href="#主函数" class="headerlink" title="主函数;"></a>主函数;</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>      <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DELAY.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Serial.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span></span></span><br><span class="line"><span class="type">uint8_t</span> RxData;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">LED_Init(<span class="number">1</span>);</span><br><span class="line">Serial_Init();</span><br><span class="line">Serial_Printf(<span class="string">&quot;num is %d&quot;</span>,<span class="number">10</span>);</span><br><span class="line">OLED_ShowString(<span class="number">1</span>, <span class="number">1</span>, <span class="string">&quot;TxPacket&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">3</span>, <span class="number">1</span>, <span class="string">&quot;RxPacket&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Serial_RxFlag == <span class="number">1</span>)<span class="comment">//如果接收到数据包</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowString(<span class="number">4</span>, <span class="number">1</span>, <span class="string">&quot;                &quot;</span>);<span class="comment">//OLED清除原有的显示</span></span><br><span class="line">OLED_ShowString(<span class="number">4</span>, <span class="number">1</span>, Serial_RxPacket);<span class="comment">//显示接收到的数据包</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//将收到的数据包进行字符串比对，执行对应操作</span></span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">strcmp</span>(Serial_RxPacket, <span class="string">&quot;LEDON&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED_ON(<span class="number">1</span>);</span><br><span class="line">Serial_SendString(<span class="string">&quot;LEDONOK\r\n&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>, <span class="number">1</span>, <span class="string">&quot;                &quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>, <span class="number">1</span>, <span class="string">&quot;LEDONOK&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">strcmp</span>(Serial_RxPacket, <span class="string">&quot;LEDOFF&quot;</span>) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED_OFF(<span class="number">1</span>);</span><br><span class="line">Serial_SendString(<span class="string">&quot;LEDOFFOK\r\n&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>, <span class="number">1</span>, <span class="string">&quot;                &quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>, <span class="number">1</span>, <span class="string">&quot;LEDOFFOK&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//输入不是我们指定的格式</span></span><br><span class="line">&#123;</span><br><span class="line">Serial_SendString(<span class="string">&quot;ERROR\r\n&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>, <span class="number">1</span>, <span class="string">&quot;                &quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>, <span class="number">1</span>, <span class="string">&quot;ERROR&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Serial_RxFlag = <span class="number">0</span>;<span class="comment">//将接收数据包标志位清零，否则无法接收后续数据包</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="实现视频："><a href="#实现视频：" class="headerlink" title="实现视频："></a>实现视频：</h3><h2 id="任务（3）：通过串⼝调整LED闪烁频率"><a href="#任务（3）：通过串⼝调整LED闪烁频率" class="headerlink" title="任务（3）：通过串⼝调整LED闪烁频率"></a>任务（3）：通过串⼝调整LED闪烁频率</h2><h3 id="分析："><a href="#分析：" class="headerlink" title="分析："></a>分析：</h3><p><strong>相比于任务二，无非是改变一下中断事件，这个事件就是改变一个float变量而已</strong></p><p>这个float变量范围取值0-3，精度0.1</p><p>当然，涉及到时间就要配置一下tim计时器来结合使用</p><p>我们搬出之前秒计时器的代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);<span class="comment">//使能时钟</span></span><br><span class="line"></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision=TIM_CKD_DIV1; <span class="comment">//ָ设置时钟分频（1分频）</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode=TIM_CounterMode_Up; <span class="comment">//向上计数</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period=<span class="number">10000</span><span class="number">-1</span>;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler=<span class="number">7200</span><span class="number">-1</span>; <span class="comment">//72mzh / 7200 = 10k ,72mhz / 7200 = 10k</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter=<span class="number">0</span>;<span class="comment">//重复计数（高级计时器有，现在不用）</span></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line">TIM_ClearFlag(TIM2,TIM_FLAG_Update); <span class="comment">//清除TIM2的更新中断标志位，确保定时器开始时没有残留的中断标志</span></span><br><span class="line"></span><br><span class="line">TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);<span class="comment">//开启更新中断到nvic通路</span></span><br><span class="line"></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"><span class="comment">//省略</span></span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对于周期的设定，<strong>核心代码</strong>就是这两个：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">TIM_TimeBaseInitStructure.TIM_Period=<span class="number">10000</span><span class="number">-1</span>;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler=<span class="number">7200</span><span class="number">-1</span>; <span class="comment">//72mzh / 7200 = 10k ,72mhz / 7200 = 10k</span></span><br></pre></td></tr></table></figure><p>上面一行是arr（自动重装计数值），下面一行是把72mhz<strong>分成7200份</strong></p><p>如果说上面是10000的话，那周期就是1秒，如果把上面改成5k，那周期就是0.5秒</p><p><strong>因此，我们可以通过只修改arr来实现改变周期</strong></p><p>修改arr的函数：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">TIM_SetAutoreload</span><span class="params">(TIM_TypeDef* TIMx, <span class="type">uint16_t</span> Autoreload)</span>;</span><br></pre></td></tr></table></figure><p>动态修改 TIM_Period：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 修改自动重装载值</span><br><span class="line">TIM_SetAutoreload(TIM2, new_arr);</span><br><span class="line"></span><br><span class="line">// 触发更新事件，让新的ARR值立即生效</span><br><span class="line">TIM_GenerateEvent(TIM2, TIM_EventSource_Update);</span><br></pre></td></tr></table></figure><h4 id="串口中断，tim中断："><a href="#串口中断，tim中断：" class="headerlink" title="串口中断，tim中断："></a>串口中断，tim中断：</h4><p>串口中断：</p><p>源于上位机的信息输入，中断后引起事件——tim2计时器周期修改</p><p>tim中断：</p><p>源于自增计数器达到预设值，中断后引起事件——开关led</p><h3 id="二者的配合："><a href="#二者的配合：" class="headerlink" title="二者的配合："></a>二者的配合：</h3><p>将这个程序的执行过程提炼出来，就是：</p><p>启用tim2计时器，启用usart1</p><p>——&gt;把tim2的自动重装计数事件连接到NVIC，把usart1的rxne事件连接到NVIC</p><p>——&gt;配置tim2的中断事件为亮灯灭灯，rxne的中断事件配置为 <strong>更改tim2计数器的周期</strong></p><p>——&gt;配置usart1的串口输入参数，配置好它的接收数据包格式</p><p>——&gt;在主函数中整合计算，分拣数据，实现功能</p><p>serial.c:</p><h3 id="代码实现：-1"><a href="#代码实现：-1" class="headerlink" title="代码实现："></a>代码实现：</h3><h4 id="库函数"><a href="#库函数" class="headerlink" title="库函数"></a>库函数</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdarg.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">char</span> Serial_RxPacket[<span class="number">100</span>];<span class="comment">//数据包数组</span></span><br><span class="line"><span class="type">uint8_t</span> Serial_RxFlag;<span class="comment">//数据包接受标志位</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Serial_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);<span class="comment">//USATR1在APB2总线上</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP; <span class="comment">//tx设置为复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_9;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU; <span class="comment">//rx设置为上拉输入（输入不存在复用不复用的，因为输出只能有一个，但是输入可以有多个）</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_10;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line">USART_InitTypeDef USART_InitStructure;</span><br><span class="line">USART_InitStructure.USART_BaudRate = <span class="number">9600</span>; <span class="comment">//设置波特率</span></span><br><span class="line">USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None; <span class="comment">//设置没有硬件流控制</span></span><br><span class="line">USART_InitStructure.USART_Mode = USART_Mode_Rx|USART_Mode_Tx; <span class="comment">//设置模式为rx和tx都用</span></span><br><span class="line">USART_InitStructure.USART_Parity = USART_Parity_No; <span class="comment">//设置不进行奇偶校验</span></span><br><span class="line">USART_InitStructure.USART_StopBits = USART_StopBits_1;<span class="comment">//设置终止位长度位1</span></span><br><span class="line">USART_InitStructure.USART_WordLength = USART_WordLength_8b;<span class="comment">//设置数据长度为8位</span></span><br><span class="line"></span><br><span class="line">USART_Init(USART1,&amp;USART_InitStructure);<span class="comment">//初始化</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面配置接收中断</span></span><br><span class="line">USART_ITConfig(USART1,USART_IT_RXNE,ENABLE);<span class="comment">//这句usatr1的itconfig配置了usatr1到nvic的通路</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面配置nvic</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);<span class="comment">//先分组</span></span><br><span class="line">NVIC_InitTypeDef NVIC_InitSturcture;</span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannel = USART1_IRQn; <span class="comment">//配置nvic的irqn通道</span></span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannelPreemptionPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_InitSturcture.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitSturcture);</span><br><span class="line"></span><br><span class="line">USART_Cmd(USART1,ENABLE);<span class="comment">//打开开关</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> <span class="title function_">Serial_GetRxFlag</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(Serial_RxFlag == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">Serial_RxFlag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">USART1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> RxState = <span class="number">0</span>;<span class="comment">//当前状态机状态的静态变量，出函数之后不会销毁，下次用的时候保持上次用最后的值</span></span><br><span class="line"><span class="type">static</span> <span class="type">uint8_t</span> pRxPacket = <span class="number">0</span>;<span class="comment">//当前接收数据位置的静态变量</span></span><br><span class="line"><span class="keyword">if</span> (USART_GetITStatus(USART1, USART_IT_RXNE) == SET)<span class="comment">//是否是USART1的接收触发中断</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">uint8_t</span> RxData = USART_ReceiveData(USART1);<span class="comment">//读取数据寄存器，存放在接收的数据变量</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//根据状态机画的图编写下面的程序：</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//rxstate为0，接收数据包包头</span></span><br><span class="line"><span class="keyword">if</span> (RxState == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (RxData == <span class="string">&#x27;@&#x27;</span> &amp;&amp; Serial_RxFlag == <span class="number">0</span>)<span class="comment">//数据是包头，并且上一个数据包已处理完了</span></span><br><span class="line">&#123;</span><br><span class="line">RxState = <span class="number">1</span>;<span class="comment">//下面接受数据</span></span><br><span class="line">pRxPacket = <span class="number">0</span>;<span class="comment">//数据包的位置归零，开始挨个往里塞</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//restate为1，接收数据包数据，同时判断是否接收到了第一个包尾</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (RxState == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (RxData == <span class="string">&#x27;\r&#x27;</span>)<span class="comment">//如果收到第一个包尾</span></span><br><span class="line">&#123;</span><br><span class="line">RxState = <span class="number">2</span>;<span class="comment">//置下一个状态</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span><span class="comment">//接收到了正常的数据</span></span><br><span class="line">&#123;</span><br><span class="line">Serial_RxPacket[pRxPacket] = RxData;<span class="comment">//数据存入数据包数组的对应的位置</span></span><br><span class="line">pRxPacket ++;<span class="comment">//标记下一次该存放的位置</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//rxstate为2，接收数据包第二个包尾</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (RxState == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (RxData == <span class="string">&#x27;\n&#x27;</span>)<span class="comment">//如果收到第二个包尾</span></span><br><span class="line">&#123;</span><br><span class="line">RxState = <span class="number">0</span>;<span class="comment">//状态归0</span></span><br><span class="line">Serial_RxPacket[pRxPacket] = <span class="string">&#x27;\0&#x27;</span>;<span class="comment">//将收到的字符数据包添加一个字符串结束标志（不然不会自带）</span></span><br><span class="line">Serial_RxFlag = <span class="number">1</span>;<span class="comment">//rxflag为1，成功接收一个数据包</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">USART_ClearITPendingBit(USART1, USART_IT_RXNE);<span class="comment">//清除标志位</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="主函数："><a href="#主函数：" class="headerlink" title="主函数："></a>主函数：</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>      <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DELAY.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Serial.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Oled.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;string.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Timer.h&quot;</span></span></span><br><span class="line"><span class="type">uint8_t</span> RxData;</span><br><span class="line"><span class="type">uint8_t</span> ledstate = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ledstate == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ledstate = <span class="number">1</span>;</span><br><span class="line">LED_ON(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ledstate = <span class="number">0</span>;</span><br><span class="line">LED_OFF(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">LED_Init(<span class="number">1</span>);</span><br><span class="line">Serial_Init();</span><br><span class="line">Timer_Init();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Serial_RxFlag == <span class="number">1</span>)<span class="comment">//如果接收到数据包</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;num:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">6</span>,Serial_RxPacket);</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> tempint = Serial_RxPacket[<span class="number">0</span>]<span class="number">-48</span>;</span><br><span class="line"><span class="type">float</span> tempflo = Serial_RxPacket[<span class="number">2</span>]<span class="number">-48</span>;</span><br><span class="line"><span class="type">int</span> arraylength = <span class="built_in">strlen</span>(Serial_RxPacket);</span><br><span class="line"><span class="keyword">if</span>(((Serial_RxPacket[<span class="number">1</span>]!=<span class="string">&#x27;.&#x27;</span> &amp;&amp; Serial_RxPacket[<span class="number">1</span>]==<span class="string">&#x27;0&#x27;</span>)&amp;&amp;(arraylength&gt;<span class="number">1</span>))||arraylength&gt;<span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowString(<span class="number">3</span>,<span class="number">1</span>,<span class="string">&quot;error input&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> arrtemp = <span class="number">10000</span>*(tempint + tempflo*<span class="number">0.1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(arrtemp&gt;<span class="number">0</span>&amp;&amp;arrtemp&lt;=<span class="number">30000</span>)</span><br><span class="line">&#123;OLED_ShowNum(<span class="number">2</span>,<span class="number">1</span>,arrtemp,<span class="number">8</span>);</span><br><span class="line">OLED_ShowString(<span class="number">3</span>,<span class="number">1</span>,<span class="string">&quot;valid input&quot;</span>);</span><br><span class="line"><span class="comment">// 修改自动重装载值</span></span><br><span class="line">TIM_SetAutoreload(TIM2, arrtemp<span class="number">-1</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 触发更新事件，让新的ARR值立即生效</span></span><br><span class="line">TIM_GenerateEvent(TIM2, TIM_EventSource_Update);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowString(<span class="number">3</span>,<span class="number">1</span>,<span class="string">&quot;error input&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Serial_RxFlag = <span class="number">0</span>;<span class="comment">//将接收数据包标志位清零，否则无法接收后续数据包</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="视频效果："><a href="#视频效果：" class="headerlink" title="视频效果："></a>视频效果：</h3><h2 id="任务-4-Debug-功能和使⽤"><a href="#任务-4-Debug-功能和使⽤" class="headerlink" title="任务(4) Debug 功能和使⽤"></a>任务(4) Debug 功能和使⽤</h2><h3 id="1-进入-Debug-模式"><a href="#1-进入-Debug-模式" class="headerlink" title="1. 进入 Debug 模式"></a>1. 进入 Debug 模式</h3><ol><li><strong>编译项目</strong>：<ul><li>在菜单栏中，点击 <strong>“Project”</strong> -&gt; **”Build Target”**（或直接点击工具栏中的小锤子图标）。</li></ul></li><li><strong>进入 Debug 模式</strong>：<ul><li>点击工具栏中的 <strong>“Debug”</strong> 按钮（一个带有小虫子的图标），或从菜单中选择 <strong>“Debug”</strong> -&gt; **”Start&#x2F;Stop Debug Session”**。</li></ul></li></ol><h3 id="2-复位-MCU"><a href="#2-复位-MCU" class="headerlink" title="2. 复位 MCU"></a>2. 复位 MCU</h3><ul><li><p>复位</p><p>在 Debug 界面上，找到工具栏中的 <strong>“Reset”</strong> 按钮<img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023222235399.png" alt="image-20241023222235399">，点击该按钮即可复位</p></li></ul><h3 id="3-调试运行模式"><a href="#3-调试运行模式" class="headerlink" title="3. 调试运行模式"></a>3. 调试运行模式</h3><p>在调试模式下，有以下按钮在上方工具栏：</p><ul><li><p><strong>全速运行（F5）</strong>：</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023222252338.png" alt="image-20241023222252338">这个按钮将使程序一直处于运行状态,或者直接运行到设置的断点处。</p></li><li><p><strong>单步执行</strong>：</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023222301550.png" alt="image-20241023222301550">点每点一次按钮，程序运行一步，遇到函数会进入函数执行</p></li><li><p><strong>逐行调试</strong>：</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023222336782.png" alt="image-20241023222336782">每点一次按钮，程序运行一行，遇到函数<strong>跳过函数执行</strong></p></li><li><p><strong>跳出调试</strong>：</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023222437618.png" alt="image-20241023222437618">在代码中找到你想运行到的行，右键点击该行，然后选择 **”Run to Cursor”**。</p></li><li><p><strong>运行到光标处</strong>：</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023222526194.png" alt="image-20241023222526194">直接运行到光标处</p></li><li><p>前进后退</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023222957219.png" alt="image-20241023222957219">返回上一步调试，进行下一步调试</p></li></ul><h3 id="4-断点-Breakpoint"><a href="#4-断点-Breakpoint" class="headerlink" title="4. 断点 (Breakpoint)"></a>4. 断点 (Breakpoint)</h3><ul><li><p>设置断点</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023222555566.png" alt="image-20241023222555566">设置当前光标处是断点</p></li><li><p>失能断点</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023222641250.png" alt="image-20241023222641250">失能当前光标处的断点<img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023222703855.png" alt="image-20241023222703855">失能所有断点<img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241023222739694.png" alt="image-20241023222739694">删除所有断点</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STM32学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>近世代数-有限群和子群</title>
      <link href="/2024/10/18/%E8%BF%91%E4%B8%96%E4%BB%A3%E6%95%B0-%E6%9C%89%E9%99%90%E7%BE%A4%E5%92%8C%E5%AD%90%E7%BE%A4/"/>
      <url>/2024/10/18/%E8%BF%91%E4%B8%96%E4%BB%A3%E6%95%B0-%E6%9C%89%E9%99%90%E7%BE%A4%E5%92%8C%E5%AD%90%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h2 id="主要内容："><a href="#主要内容：" class="headerlink" title="主要内容："></a>主要内容：</h2><p>有限群的定义及性质(补充)</p><p>子群的定义</p><p>子群的性质</p><p>子群的判别 </p><p>典型子群</p><h2 id="有限群的定义及性质-补充"><a href="#有限群的定义及性质-补充" class="headerlink" title="有限群的定义及性质(补充)"></a>有限群的定义及性质(补充)</h2><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018204835303.png" alt="image-20241018204835303"></p><p>令A&#x3D;{0,1,-1}，请问集合A关于普通乘法* 能否作成一个(有限)群？为什么？</p><ul><li>答：不行，有零元，和单位元冲突</li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018205115002.png" alt="image-20241018205115002"></p><p>证明：</p><p>​</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 近世代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>近世代数-群的定义及性质</title>
      <link href="/2024/10/18/%E8%BF%91%E4%B8%96%E4%BB%A3%E6%95%B0-%E7%BE%A4%E7%9A%84%E5%AE%9A%E4%B9%89%E5%8F%8A%E6%80%A7%E8%B4%A8/"/>
      <url>/2024/10/18/%E8%BF%91%E4%B8%96%E4%BB%A3%E6%95%B0-%E7%BE%A4%E7%9A%84%E5%AE%9A%E4%B9%89%E5%8F%8A%E6%80%A7%E8%B4%A8/</url>
      
        <content type="html"><![CDATA[<p>[TOC]</p><h2 id="主要内容"><a href="#主要内容" class="headerlink" title="主要内容"></a>主要内容</h2><ol><li>群的定义</li><li>群的基本性质</li><li>群的实例</li><li>群中的术语</li></ol><h2 id="群的定义"><a href="#群的定义" class="headerlink" title="群的定义"></a>群的定义</h2><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018165805648.png" alt="image-20241018165805648"></p><ul><li><p>**&#x3D;&#x3D;代数系统&#x3D;&#x3D;  ——结合律——&gt; &#x3D;&#x3D;半群&#x3D;&#x3D; —有单位元—&gt;  &#x3D;&#x3D;幺半群&#x3D;&#x3D;  **—两条路—&gt;</p></li><li><p><strong>——交换律——&gt;  &#x3D;&#x3D;可换幺半群&#x3D;&#x3D;</strong></p><p><strong>——如果每个元素都有逆元——&gt; &#x3D;&#x3D;群&#x3D;&#x3D;</strong></p></li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018170724752.png" alt="image-20241018170724752"></p><p><img src="C:/Users/29111/AppData/Roaming/Typora/typora-user-images/image-20241018170702011.png" alt="image-20241018170702011"></p><ul><li><strong>对于IV  ，可以这么考虑：直接让a&#x3D;b，那么运算的左单位元和右单位元都存在，即单位元存在，然后再让b等于单位元e，那么就能推出逆元也存在</strong></li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018171414327.png" alt="image-20241018171414327"></p><ul><li>答案是否定的</li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018173248517.png" alt="image-20241018173248517"></p><h2 id="群的性质"><a href="#群的性质" class="headerlink" title="群的性质"></a>群的性质</h2><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018173338024.png" alt="image-20241018173338024"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018173355154.png" alt="image-20241018173355154"></p><h4 id="讨论群中特异元素的性质"><a href="#讨论群中特异元素的性质" class="headerlink" title="讨论群中特异元素的性质"></a>讨论群中特异元素的性质</h4><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018173458748.png" alt="image-20241018173458748"></p><ul><li>逆一遍，再逆一遍，还等于自身</li><li>先运算再逆，等于先逆，再交换过来算</li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018190900808.png" alt="image-20241018190900808"></p><ul><li>0元不存在，因为只要是群，就一定有逆元，如果有0元，就冲突了</li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018191220599.png" alt="image-20241018191220599"></p><ul><li><strong>这两个性质都是利用了群的性质中的可逆性</strong></li></ul><h2 id="群的实例"><a href="#群的实例" class="headerlink" title="群的实例"></a>群的实例</h2><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018191555819.png" alt="image-20241018191555819"></p><h2 id="群中的术语"><a href="#群中的术语" class="headerlink" title="群中的术语"></a>群中的术语</h2><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018191955947.png" alt="image-20241018191955947"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018192004215.png" alt="image-20241018192004215"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018192144706.png" alt="image-20241018192144706"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018192737213.png" alt="image-20241018192737213"></p><p>在这个问题中，群运算是<strong>对称差</strong> ⊕⊕，我们可以利用以下性质：</p><ol><li><p><strong>对称差的逆元</strong>：对称差运算的一个特点是，每个元素的逆元就是它本身。也就是说，对于任意 X∈P({a,b})<em>X</em>∈<em>P</em>({<em>a</em>,<em>b</em>})，有：</p><p>X⊕X&#x3D;∅<em>X</em>⊕<em>X</em>&#x3D;∅</p><p>因为对称差只保留不重叠的元素，因此两个相同的集合进行对称差操作时，结果是空集。</p></li><li><p><strong>单位元</strong>：在对称差运算下，单位元是<strong>空集</strong> ∅∅，因为对于任意集合 X<em>X</em>，有：</p><p>X⊕∅&#x3D;X<em>X</em>⊕∅&#x3D;<em>X</em></p><p>所以我们可以把对称差的运算当作某种“加法”操作，其中每个元素的“逆元”是它自己。</p></li></ol><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018193708168.png" alt="image-20241018193708168"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018193743149.png" alt="image-20241018193743149"></p><h3 id="群中元素的幂"><a href="#群中元素的幂" class="headerlink" title="群中元素的幂"></a>群中元素的幂</h3><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018194011084.png" alt="image-20241018194011084"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018194044829.png" alt="image-20241018194044829"></p><ul><li>注意，必须是可交换群才满足第三条性质</li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018194316830.png" alt="image-20241018194316830"></p><h3 id="模-n运算中的元素的阶"><a href="#模-n运算中的元素的阶" class="headerlink" title="模 n运算中的元素的阶"></a>模 n运算中的元素的阶</h3><p>例子中提到的群 ⟨Z6,⊕⟩ 是指模 6下的加法群。这个群的元素是 Z6&#x3D;{[0],[1],[2],[3],[4],[5]}，其中每个元素是整数对 6 取模的等价类（即余数）。</p><p>在这个群中，运算 ⊕⊕ 是指<strong>模 6 加法</strong>，例如：</p><ul><li>[2]⊕[3]&#x3D;[5]</li><li>[4]⊕[4]&#x3D;[2] （因为 4+4&#x3D;8，模 6 后得到 2）</li><li>[3]⊕[3]&#x3D;[0] （因为 3+3&#x3D;6，模 6 后得到 0）</li></ul><p>群的单位元是 [0]，因为对于任意元素 [a]∈Z6，我们有 [a]⊕[0]&#x3D;[<em>a</em>]。</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018194624206.png" alt="image-20241018194624206"></p><p>r∣k：这个符号表示<strong>整除</strong>。读作“r 整除 k”，意思是 k 可以被 r整除，即存在一个整数 m，使得 k&#x3D;mr。例如：</p><ul><li>3∣6，因为 6 可以被 3 整除，且 6&#x3D;3×26&#x3D;3×2。</li><li>4∤6，因为 6 不能被 4 整除。</li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018195442637.png" alt="image-20241018195442637"></p><p>设 ∣a∣&#x3D;r，即a^r^&#x3D;<em>e</em>。我们希望证明 a^−1^ 的阶也是 <em>r</em>，即 (a^−1^)^r^&#x3D;e</p><p>通过群的性质，(a^−1^)^r^&#x3D;(a^r^)^−1^由于 a^r^&#x3D;e，我们有：</p><p>(a^r^)^−1^&#x3D;e^−1^&#x3D;e</p><p>因此，(a^−1^)^r^&#x3D;e，说明 a^−1^ 的阶不大于 r</p><p>另一方面，假设 (a^−1^)^k^&#x3D;e 对某个 <em>k</em> 成立。我们通过逆元的性质得到：</p><p>a^k^&#x3D;(a^−1^)^−k^&#x3D;e^−1^&#x3D;e</p><p>由于 a的阶是 <em>r</em>，因此 <em>k</em> 必须是 <em>r</em> 的倍数，即<em>k</em>&#x3D;<em>r</em>。这说明 <em>a</em>^−1^ 的阶恰好是 <em>r</em>。</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018200226504.png" alt="image-20241018200226504"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018200434602.png" alt="image-20241018200434602"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018200634225.png" alt="image-20241018200634225"></p><ul><li>首先要讨论是不是无限集</li><li>对于一坨东西来说，左右各自添一个元素和一个元素的逆和原来一坨的基数相等</li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018200840462.png" alt="image-20241018200840462"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018202449239.png" alt="image-20241018202449239"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018204452162.png" alt="image-20241018204452162"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 近世代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stm32学习笔记002</title>
      <link href="/2024/10/16/stm3202/"/>
      <url>/2024/10/16/stm3202/</url>
      
        <content type="html"><![CDATA[<h2 id="任务一：GPIO输入输出"><a href="#任务一：GPIO输入输出" class="headerlink" title="任务一：GPIO输入输出"></a>任务一：GPIO输入输出</h2><h3 id="原理（实现步骤）"><a href="#原理（实现步骤）" class="headerlink" title="原理（实现步骤）"></a>原理（实现步骤）</h3><ul><li>选择两个GPIO引脚，PB0负责输出，PB1作为输入端。</li></ul><ol><li><strong>GPIO配置</strong><ul><li>设置GPIOB0,B1为推挽输出模式</li></ul></li><li><strong>控制逻辑</strong><ul><li>第一个gpio输出高低电平，控制第一个灯亮灭</li><li>每次循环开始时，ReadInputDataBit函数<strong>读取GPIOB0的输入寄存器（IDR）</strong>，记为int led1_status</li><li>根据led1_status，延时200ms将GPIOB1调整为与GPIO0 一致</li><li>调整一致以后，延时200ms将GPIO0的状态反过来，看起来就是led1先灭了</li><li>如此往复，产生led2跟着led1跑的的感觉</li></ul></li></ol><p>代码如下：（lLEDD_ON 和LED_OFF为我自定义的函数，详见任务三——代码模块化）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>      <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DELAY.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">LED_Init(<span class="number">1</span>);</span><br><span class="line">LED_Init(<span class="number">2</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> led1_status = GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_0);</span><br><span class="line"><span class="keyword">if</span>(led1_status)</span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">200</span>);<span class="comment">//ÑÓÊ±Ò»ÏÂ</span></span><br><span class="line">LED_OFF(<span class="number">2</span>);</span><br><span class="line">Delay_ms(<span class="number">200</span>);</span><br><span class="line">LED_ON(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Delay_ms(<span class="number">200</span>);</span><br><span class="line">LED_ON(<span class="number">2</span>);</span><br><span class="line">Delay_ms(<span class="number">200</span>);</span><br><span class="line">LED_OFF(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>视频：</p><h2 id="任务二-PWM控制舵机"><a href="#任务二-PWM控制舵机" class="headerlink" title="任务二 PWM控制舵机"></a>任务二 PWM控制舵机</h2><h5 id="1-pwm驱动呼吸灯"><a href="#1-pwm驱动呼吸灯" class="headerlink" title="1.pwm驱动呼吸灯"></a>1.pwm驱动呼吸灯</h5><p>概念：（oc为输出比较，oi为输入捕获，cc为输入捕获和输出比较的单元）</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241017103420122.png" alt="image-20241017103420122"></p><p><strong>原理</strong></p><p>ccr为我们自己设定的一个数值，cnt为周期自增的，每当cnt结束一个周期，就触发一次事件（重新自增），在这个周期内，比较cnt和ccr的大小，来调控pwm输出<img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241017104240355.png" alt="image-20241017104240355"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241017104928031.png" alt="image-20241017104928031"></p><p>输出模式控制器的不同状态：</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241017105149834.png" alt="image-20241017105149834"></p><ul><li><p>冻结：用于暂停</p></li><li><p>置有效电平 &#x3D;&#x3D; 置高电平      置无效电平 &#x3D;&#x3D; 置低电平</p></li><li><p>电平反转：方便的输出一个频率可调，占空比为50%的pwm波</p></li><li><p>强制：可调高低的冻结</p></li><li><p>pwm模式：最常用<img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241017105859083.png" alt="image-20241017105859083"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241017105938711.png" alt="image-20241017105938711"></p></li></ul><p>代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);<span class="comment">//使能时钟</span></span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);<span class="comment">//使能afio时钟</span></span><br><span class="line">GPIO_PinRemapConfig(GPIO_PartialRemap1_TIM2,ENABLE);<span class="comment">//重映射（如果是jatg调试端口，再加上下面一句）</span></span><br><span class="line">GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable,ENABLE); <span class="comment">//用afio将jtag解除</span></span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF_PP;<span class="comment">//注意这个位置设置为复用推挽输出</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin=GPIO_Pin_15;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision=TIM_CKD_DIV1; <span class="comment">//ָ设置时钟分频（1分频）</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode=TIM_CounterMode_Up; <span class="comment">//向上计数</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period=<span class="number">100</span><span class="number">-1</span>;   <span class="comment">//ARR</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler=<span class="number">720</span><span class="number">-1</span>; <span class="comment">//72mzh / 7200 = 10k ,72mhz / 7200 = 10k   //PSC</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter=<span class="number">0</span>;<span class="comment">//重复计数（高级计时器有，现在不用）</span></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line">TIM_OCInitTypeDef TIM_OCInitStructure; </span><br><span class="line"></span><br><span class="line">TIM_OCStructInit(&amp;TIM_OCInitStructure);<span class="comment">//默认给所有变量一个初始值，防止出错</span></span><br><span class="line"><span class="comment">//下面再改自己想改的</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCMode=TIM_OCMode_PWM1;<span class="comment">//设置输出比较的模式</span></span><br><span class="line">TIM_OCInitStructure.TIM_OCPolarity=TIM_OCPolarity_High;<span class="comment">//设置输出比较的极性</span></span><br><span class="line">TIM_OCInitStructure.TIM_OutputState=TIM_OutputState_Enable;<span class="comment">//设置输出使能</span></span><br><span class="line">TIM_OCInitStructure.TIM_Pulse=<span class="number">0</span>;<span class="comment">//设置ccr寄存器值</span></span><br><span class="line">TIM_OC1Init(TIM2,&amp;TIM_OCInitStructure);</span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare1</span><span class="params">(<span class="type">uint16_t</span> Compare)</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare1(TIM2,Compare);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面是mian函数</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>      <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DELAY.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Timer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;PWM.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> i;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">PWM_Init();</span><br><span class="line">OLED_Init();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;=<span class="number">100</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">1</span>,i,<span class="number">3</span>);</span><br><span class="line">PWM_SetCompare1(i);</span><br><span class="line">Delay_ms(<span class="number">10</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>现象：</p><h5 id="2-pwm驱动舵机（主任务2）"><a href="#2-pwm驱动舵机（主任务2）" class="headerlink" title="2.pwm驱动舵机（主任务2）"></a>2.pwm驱动舵机（主任务2）</h5><p><strong>技术点介绍</strong>：</p><p>定时器的比较输出：</p><p>原理：主要依靠cnt（自增计数器）和ccr（我们自己设定的一个值）进行比较，当cnt等于ccr的时候，触发事件–重新计数（详见pwm驱动呼吸点灯中的图片）</p><h6 id="详细过程："><a href="#详细过程：" class="headerlink" title="详细过程："></a><strong>详细过程：</strong></h6><p><strong>计数器（CNT）</strong>根据定时器的时钟频率和预分频器的设置自动增加（或减少）。当计数器达到 ARR（自动重装载寄存器）的值时，计数器会重置，并从头开始计数。</p><p><strong>比较值（CCR）</strong>每个定时器通道都有一个比较寄存器（CCRx），它存储定时器的比较值。当计数器的值（CNT）与比较寄存器的值相等时，定时器会触发一个事件，改变输出引脚的状态</p><p><strong>ARR（自动重装载寄存器）</strong>设置了计数器的最大值，也就是 PWM 信号的<strong>周期</strong>。计数器在每次达到 ARR的值后会自动重置，开始新的周期。</p><p><strong>CCR（捕获比较寄存器）</strong>用于设置比较值，也就是定时器在这个值时改变输出状态</p><h6 id="pwm是什么："><a href="#pwm是什么：" class="headerlink" title="pwm是什么："></a>pwm是什么：</h6><p>在一个很短的周期内，我们规定一定一定时间高电平，一段时间的低电平（即占空比），这样电平就会以较高的频率进行高低变化，输出一个方波，这个波就是pwm波，可以用来驱动舵机</p><h6 id="pwm的实现："><a href="#pwm的实现：" class="headerlink" title="pwm的实现："></a>pwm的实现：</h6><p>就像上面说的那样，pwm的实现首先要规定一个很小的周期，以舵机为例，想要控制舵机，周期就要设置为20ms,对应的arr和psc要符合20ms的周期</p><p><strong>核心代码：</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">TIM_TimeBaseInitStructure.TIM_Period=<span class="number">20000</span><span class="number">-1</span>;   <span class="comment">//ARR</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler=<span class="number">72</span><span class="number">-1</span>; <span class="comment">//PSC</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">计算定时器的计数频率</span></span><br><span class="line"><span class="comment">定时器计数频率由 系统时钟频率 / (PSC + 1) 决定。</span></span><br><span class="line"><span class="comment">比如，如果 PSC = 71，那么定时器的计数频率为：</span></span><br><span class="line"><span class="comment">计数频率=72MHz除以（71+1）=1MHz</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">这意味着定时器每微秒计数一次。</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">设置 ARR 值</span></span><br><span class="line"><span class="comment">在 1MHz 计数频率下，20ms 对应的计数值为：</span></span><br><span class="line"><span class="comment">ARR=20ms×1MHz=20000</span></span><br><span class="line"><span class="comment">因此，将 ARR 设置为 20000-1 就可以产生一个 20ms 周期的 PWM 信号。*/</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">PWM_SetCompare2</span><span class="params">(<span class="type">uint16_t</span> Compare)</span><span class="comment">//初始化哪个通道，就compare几</span></span><br><span class="line">&#123;</span><br><span class="line">TIM_SetCompare2(TIM5,Compare); <span class="comment">//占空比</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">Servo_SetAngle</span><span class="params">(<span class="type">float</span> Angele)</span></span><br><span class="line">&#123;</span><br><span class="line">PWM_SetCompare2(Angele/<span class="number">180</span>*<span class="number">2000</span>+<span class="number">500</span>); <span class="comment">//把角度线性映射到占空比</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>总代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>      <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DELAY.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Timer.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Servo.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Key.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint8_t</span> KeyNumAfter = <span class="number">0</span>;</span><br><span class="line"><span class="type">uint8_t</span> KeyNumBefore = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">float</span> Angle = <span class="number">90</span>;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">Servo_Init();</span><br><span class="line">OLED_Init();</span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Angle:&quot;</span>);</span><br><span class="line">OLED_ShowString(<span class="number">2</span>,<span class="number">1</span>,<span class="string">&quot;KNum:&quot;</span>);</span><br><span class="line">Key_Init();</span><br><span class="line"></span><br><span class="line">Servo_SetAngle(Angle);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">KeyNumAfter = Key_GetNum();<span class="comment">//设置一个中间缓冲变量，防止oled上的key标识一闪而过</span></span><br><span class="line"><span class="keyword">if</span>(KeyNumAfter!=<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">KeyNumBefore = KeyNumAfter;</span><br><span class="line">&#125;</span><br><span class="line">OLED_ShowNum(<span class="number">2</span>,<span class="number">7</span>,KeyNumBefore,<span class="number">5</span>);</span><br><span class="line"><span class="keyword">if</span>(KeyNumAfter)</span><br><span class="line">&#123;</span><br><span class="line">Angle+=<span class="number">30</span>;</span><br><span class="line"><span class="keyword">if</span>(Angle&gt;<span class="number">180</span>)</span><br><span class="line">&#123;</span><br><span class="line">Angle = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">Delay_ms(<span class="number">30</span>);</span><br><span class="line">&#125;</span><br><span class="line">Servo_SetAngle(Angle);</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">7</span>,Angle,<span class="number">3</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>现象：</p><h2 id="任务三：阅读参考手册"><a href="#任务三：阅读参考手册" class="headerlink" title="任务三：阅读参考手册"></a>任务三：阅读参考手册</h2><h3 id="gpio原理："><a href="#gpio原理：" class="headerlink" title="gpio原理："></a>gpio原理：</h3><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/5d9aacdc3cbe0d2f22295cf8c98733d.png" alt="5d9aacdc3cbe0d2f22295cf8c98733d"></p><h6 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h6><ol><li>图中上半部分是输入示意图，信号从io引脚进入后，先经过<img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241017202833215.png" alt="image-20241017202833215" style="zoom:33%;" />这个结构（用于控制是上拉输入还是下拉输入的结构），然后下面是这个结构<img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241017203040197.png" alt="image-20241017203040197" style="zoom:33%;" />这个肖特基结构的作用是把信号分为高低电平（<strong>模拟信号转化为数字信号（当然更有可能是把数字信号处理一下变得更稳定）</strong>），如果在这个结构直接就直接输入，那就是直接输入模拟信号（走最上面一路）（记为模拟输入），经过肖特基触发器以后的信号就被转化为了稳定的数字信号</li><li>从肖特基触发器出来以后，有两条路，一条是复用（使用remap函数）输入，一条是直接放入输入数据寄存器，直接输入了</li></ol><h6 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h6><ol><li>下面有两条路径进入，一条是进入位设置&#x2F;清除寄存器，这个寄存器的作用是单独设置某位，而不影响其他位</li><li>第二条直接控制输出数据寄存器，这个是直接控制整个gpio口的所有位</li><li>最下面一条是来自片上外设的<strong>复用功能</strong>输入，例子可以看前面的pwm控制led（将gpioa15复用）</li></ol><h3 id="tim计时器相关"><a href="#tim计时器相关" class="headerlink" title="tim计时器相关"></a>tim计时器相关</h3><p>详见文末  其他——tim定时器学习笔记</p><h2 id="进阶任务–函数封装–流水灯"><a href="#进阶任务–函数封装–流水灯" class="headerlink" title="进阶任务–函数封装–流水灯"></a>进阶任务–函数封装–流水灯</h2><h3 id="技术介绍"><a href="#技术介绍" class="headerlink" title="技术介绍"></a>技术介绍</h3><h4 id="跨文件调用"><a href="#跨文件调用" class="headerlink" title="跨文件调用"></a>跨文件调用</h4><p>在主函数中include头文件，这个头文件用来存放函数声明</p><p>他所声明的函数存放于同名的.c文件中</p><h4 id="封装的意义"><a href="#封装的意义" class="headerlink" title="封装的意义"></a>封装的意义</h4><p>代码的封装能使代码更加简洁，更重要的是，它可以实现编程的模块化，对各个功能的增添，修补等更方便，如果工程较大的话，代码的封装是必不可少的</p><h4 id="条件编译的使用"><a href="#条件编译的使用" class="headerlink" title="条件编译的使用"></a>条件编译的使用</h4><p>以刚刚写的 waterfall.h为例</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">ifndef</span> __WATERFALL_H <span class="comment">//如果没有定义这个头文件</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> __WATERFALL_H<span class="comment">//那么定义它</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">led_waterfall</span><span class="params">(<span class="type">uint8_t</span> leds)</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">endif</span><span class="comment">//定义结束标志</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>条件编译的使用，能够防止重复定义导致错误，因为c语言引入头文件的方式就是直接把代码块复制粘贴到相应位置，如果同一个头文件在程序中粘贴两次，那就会出现大量重复定义的错误</p><h3 id="实现过程"><a href="#实现过程" class="headerlink" title="实现过程"></a>实现过程</h3><ol><li><p>首先，定义一个枚举类型</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">enum</span> </span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">led1 = <span class="number">0x01</span> &lt;&lt; <span class="number">0</span>,</span><br><span class="line">led2 = <span class="number">0x01</span> &lt;&lt; <span class="number">1</span>,</span><br><span class="line">led3 = <span class="number">0x01</span> &lt;&lt; <span class="number">2</span>,</span><br><span class="line">led4 = <span class="number">0x01</span> &lt;&lt; <span class="number">3</span>,</span><br><span class="line">led5 = <span class="number">0x01</span> &lt;&lt; <span class="number">4</span>,</span><br><span class="line">led6 = <span class="number">0x01</span> &lt;&lt; <span class="number">5</span></span><br><span class="line">&#125;leds;</span><br></pre></td></tr></table></figure></li><li><p>创建一个头文件，一个库文件</p></li><li><p>首先，定义最关键的函数，也是唯一和main函数链接的函数led_waterfall（uint8_t leds）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">led_waterfall</span><span class="params">(<span class="type">uint8_t</span> leds)</span></span><br><span class="line">&#123;</span><br><span class="line">LED_Init();</span><br><span class="line">TIM_Init();</span><br><span class="line"><span class="keyword">if</span> ((leds &amp; <span class="number">0x01</span>) == <span class="number">0x01</span>)</span><br><span class="line">&#123;</span><br><span class="line">led_should_on[led_count] = <span class="number">1</span>;</span><br><span class="line">led_count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((leds &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">1</span>)) == (<span class="number">0x01</span> &lt;&lt; <span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line">led_should_on[led_count] = <span class="number">2</span>;</span><br><span class="line">led_count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((leds &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">2</span>)) == (<span class="number">0x01</span> &lt;&lt; <span class="number">2</span>))</span><br><span class="line">&#123;</span><br><span class="line">led_should_on[led_count] = <span class="number">3</span>;</span><br><span class="line">led_count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((leds &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>)) == (<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>))</span><br><span class="line">&#123;</span><br><span class="line">led_should_on[led_count] = <span class="number">4</span>;</span><br><span class="line">led_count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((leds &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">4</span>)) == (<span class="number">0x01</span> &lt;&lt; <span class="number">4</span>))</span><br><span class="line">&#123;</span><br><span class="line">led_should_on[led_count] = <span class="number">5</span>;</span><br><span class="line">led_count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((leds &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">5</span>)) == (<span class="number">0x01</span> &lt;&lt; <span class="number">5</span>))</span><br><span class="line">&#123;</span><br><span class="line">led_should_on[led_count] = <span class="number">6</span>;</span><br><span class="line">led_count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>这个函数巧妙地运用了<strong>二进制的位运算</strong>，函数的形参看上去只能传入一个整数，实际上通过之前的枚举类型，再结合二进制的按位或运算，可以<strong>只用一个二进制数把多个信息传递进函数</strong>（每位的0和1代表每个灯的参数）</li><li>进入函数后，再把mix得到的一个二进制数和各自<strong>只有自己为1的二进制数进行按位与</strong>操作，就能把自身从按位或之后的二进制数中<strong>剥离</strong>出来</li></ul></li><li><p>接着，初始化led灯，配置tim2计时器，配置nvic</p><p>（其中包含对pb4的复用）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化GPIO</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//给pb4 remap</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);<span class="comment">//afio (to remap pb4)</span></span><br><span class="line">GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE); <span class="comment">//用afio将jtag解除</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"><span class="comment">//pb0</span></span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_0);</span><br><span class="line"><span class="comment">//pb1</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_1);</span><br><span class="line"><span class="comment">//pb5</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_5);</span><br><span class="line"><span class="comment">//pf11</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;</span><br><span class="line">GPIO_Init(GPIOF,&amp;GPIO_InitStructure);</span><br><span class="line">GPIO_SetBits(GPIOF,GPIO_Pin_11);</span><br><span class="line"><span class="comment">//pf12</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;</span><br><span class="line">GPIO_Init(GPIOF,&amp;GPIO_InitStructure);</span><br><span class="line">GPIO_SetBits(GPIOF,GPIO_Pin_12);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//pb4</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_4);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//===============================</span></span><br><span class="line"><span class="comment">//开启tim定时器</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_InitStructure;</span><br><span class="line">TIM_InitStructure.TIM_ClockDivision = TIM_CKD_DIV1;</span><br><span class="line">TIM_InitStructure.TIM_CounterMode = TIM_CounterMode_Up;</span><br><span class="line">TIM_InitStructure.TIM_Period = <span class="number">10000</span><span class="number">-1</span>;</span><br><span class="line">TIM_InitStructure.TIM_Prescaler = <span class="number">7200</span><span class="number">-1</span>;</span><br><span class="line">TIM_InitStructure.TIM_RepetitionCounter = <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_InitStructure);</span><br><span class="line"></span><br><span class="line">TIM_ClearFlag(TIM2,TIM_FLAG_Update);<span class="comment">//清空中断标志位</span></span><br><span class="line">TIM_ITConfig(TIM2,TIM_FLAG_Update,ENABLE);<span class="comment">//开启中断到nvic的通路</span></span><br><span class="line"></span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority =<span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>最后一步，事件函数的编写</p><ul><li>每秒钟进行一次操作，先打开当前要开的灯，再根据上一个灯的位置坝上一个灯熄灭</li><li>根据数组中下一个元素是否为0来判断i应该加一还是清零</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)</span><br><span class="line">&#123;</span><br><span class="line">LED_ON(led_should_on[i]);</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED_OFF(led_should_on[i<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = led_count<span class="number">-1</span>;</span><br><span class="line">LED_OFF(led_should_on[j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(led_should_on[i+<span class="number">1</span>]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>完整代码：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//============================</span></span><br><span class="line"><span class="comment">//初始化GPIO</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//给pb4 remap</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO,ENABLE);<span class="comment">//afio (to remap pb4)</span></span><br><span class="line">GPIO_PinRemapConfig(GPIO_Remap_SWJ_JTAGDisable, ENABLE); <span class="comment">//用afio将jtag解除</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"><span class="comment">//pb0</span></span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_0);</span><br><span class="line"><span class="comment">//pb1</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_1);</span><br><span class="line"><span class="comment">//pb5</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_5);</span><br><span class="line"><span class="comment">//pf11</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;</span><br><span class="line">GPIO_Init(GPIOF,&amp;GPIO_InitStructure);</span><br><span class="line">GPIO_SetBits(GPIOF,GPIO_Pin_11);</span><br><span class="line"><span class="comment">//pf12</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_12;</span><br><span class="line">GPIO_Init(GPIOF,&amp;GPIO_InitStructure);</span><br><span class="line">GPIO_SetBits(GPIOF,GPIO_Pin_12);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//pb4</span></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_4;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_Init(GPIOB,&amp;GPIO_InitStructure);</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_4);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//=================================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=================================================</span></span><br><span class="line"><span class="comment">//设置开关led的函数</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_ON</span><span class="params">(<span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">GPIO_ResetBits(GPIOB,GPIO_Pin_0);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">GPIO_ResetBits(GPIOB,GPIO_Pin_1);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">GPIO_ResetBits(GPIOB,GPIO_Pin_5);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">GPIO_ResetBits(GPIOB,GPIO_Pin_4);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">GPIO_ResetBits(GPIOF,GPIO_Pin_11);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">GPIO_ResetBits(GPIOF,GPIO_Pin_12);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">LED_OFF</span><span class="params">(<span class="type">int</span> i)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">switch</span>(i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_0);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_1);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_5);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">GPIO_SetBits(GPIOB,GPIO_Pin_4);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">GPIO_SetBits(GPIOF,GPIO_Pin_11);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">6</span>:</span><br><span class="line">GPIO_SetBits(GPIOF,GPIO_Pin_12);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//====================================================</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//===============================</span></span><br><span class="line"><span class="comment">//开启tim定时器</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);</span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_InitStructure;</span><br><span class="line">TIM_InitStructure.TIM_ClockDivision = TIM_CKD_DIV1;</span><br><span class="line">TIM_InitStructure.TIM_CounterMode = TIM_CounterMode_Up;</span><br><span class="line">TIM_InitStructure.TIM_Period = <span class="number">10000</span><span class="number">-1</span>;</span><br><span class="line">TIM_InitStructure.TIM_Prescaler = <span class="number">7200</span><span class="number">-1</span>;</span><br><span class="line">TIM_InitStructure.TIM_RepetitionCounter = <span class="number">0</span>;</span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_InitStructure);</span><br><span class="line"></span><br><span class="line">TIM_ClearFlag(TIM2,TIM_FLAG_Update);<span class="comment">//清空中断标志位</span></span><br><span class="line">TIM_ITConfig(TIM2,TIM_FLAG_Update,ENABLE);<span class="comment">//开启中断到nvic的通路</span></span><br><span class="line"></span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = TIM2_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority =<span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//=================================================</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> led_should_on[<span class="number">6</span>]; <span class="comment">//存要开关的灯,多留一个0位，用于标记</span></span><br><span class="line"><span class="type">int</span> led_count = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">led_waterfall</span><span class="params">(<span class="type">uint8_t</span> leds)</span></span><br><span class="line">&#123;</span><br><span class="line">LED_Init();</span><br><span class="line">TIM_Init();</span><br><span class="line"><span class="keyword">if</span> ((leds &amp; <span class="number">0x01</span>) == <span class="number">0x01</span>)</span><br><span class="line">&#123;</span><br><span class="line">led_should_on[led_count] = <span class="number">1</span>;</span><br><span class="line">led_count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((leds &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">1</span>)) == (<span class="number">0x01</span> &lt;&lt; <span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line">led_should_on[led_count] = <span class="number">2</span>;</span><br><span class="line">led_count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((leds &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">2</span>)) == (<span class="number">0x01</span> &lt;&lt; <span class="number">2</span>))</span><br><span class="line">&#123;</span><br><span class="line">led_should_on[led_count] = <span class="number">3</span>;</span><br><span class="line">led_count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((leds &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>)) == (<span class="number">0x01</span> &lt;&lt; <span class="number">3</span>))</span><br><span class="line">&#123;</span><br><span class="line">led_should_on[led_count] = <span class="number">4</span>;</span><br><span class="line">led_count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((leds &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">4</span>)) == (<span class="number">0x01</span> &lt;&lt; <span class="number">4</span>))</span><br><span class="line">&#123;</span><br><span class="line">led_should_on[led_count] = <span class="number">5</span>;</span><br><span class="line">led_count++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((leds &amp; (<span class="number">0x01</span> &lt;&lt; <span class="number">5</span>)) == (<span class="number">0x01</span> &lt;&lt; <span class="number">5</span>))</span><br><span class="line">&#123;</span><br><span class="line">led_should_on[led_count] = <span class="number">6</span>;</span><br><span class="line">led_count++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//=================================================</span></span><br><span class="line"><span class="comment">//具体事件编写</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)</span><br><span class="line">&#123;</span><br><span class="line">LED_ON(led_should_on[i]);</span><br><span class="line"><span class="keyword">if</span>(i&gt;<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">LED_OFF(led_should_on[i<span class="number">-1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(i==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = led_count<span class="number">-1</span>;</span><br><span class="line">LED_OFF(led_should_on[j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(led_should_on[i+<span class="number">1</span>]==<span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure></li></ol><h2 id="进阶任务：共地和上拉-下拉电阻的作用"><a href="#进阶任务：共地和上拉-下拉电阻的作用" class="headerlink" title="进阶任务：共地和上拉\下拉电阻的作用"></a>进阶任务：共地和上拉\下拉电阻的作用</h2><h3 id="1-共地"><a href="#1-共地" class="headerlink" title="1. 共地"></a>1. <strong>共地</strong></h3><p>共地是指电路中的不同部分（如电源、传感器、外设、处理器等）共享同一个GND作为电压为零的参考点，所有信号电压都是相对于这个参考点来测量的，避免信号传输过程中产生误差。</p><p>如果不共地，信号可能会不稳定，不共地的电路可能会在地线之间形成环路，产生电磁干扰，可能损坏电路元件</p><h3 id="2-上拉电阻和下拉电阻"><a href="#2-上拉电阻和下拉电阻" class="headerlink" title="2. 上拉电阻和下拉电阻"></a>2. <strong>上拉电阻和下拉电阻</strong></h3><p>上拉电阻 和 下拉电阻 是用来稳定数字电路中未连接状态时的信号电平的电阻器。它们用于防止输入引脚悬空，并确保其处于已知的逻辑电平。上拉电阻连接在 信号引脚和电源正极 之间。当输入引脚没有驱动时，上拉电阻将引脚电压拉高到高电平，确保信号处于稳定的高电平。下拉电阻连接信号引脚和地 之间。当输入引脚没有驱动时，下拉电阻将引脚电压拉低到逻辑低电平，确保信号处于稳定的低电平。</p><h3 id="分析图片"><a href="#分析图片" class="headerlink" title="分析图片"></a>分析图片</h3><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018005115582.png" alt="image-20241018005115582" style="zoom:33%;" />这个图片中，当开关断开时，nrst直接连在上拉电阻上，为稳定的高电平，当开关闭合时，nrst接地，为低电平</p><h2 id="其它——tim定时器学习笔记"><a href="#其它——tim定时器学习笔记" class="headerlink" title="其它——tim定时器学习笔记"></a>其它——tim定时器学习笔记</h2><h3 id="定时器外部中断"><a href="#定时器外部中断" class="headerlink" title="定时器外部中断"></a>定时器外部中断</h3><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241016182413622.png" alt="image-20241016182413622"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241016182924178.png" alt="image-20241016182924178"></p><ul><li>主从触发模式的作用：它能让内部的硬件在不受程序的控制下实现自动运行（可以减轻cpu的负担）</li></ul><h4 id="基本定时器工作原理：（只能向上计数）"><a href="#基本定时器工作原理：（只能向上计数）" class="headerlink" title="基本定时器工作原理：（只能向上计数）"></a>基本定时器工作原理：（只能向上计数）</h4><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241016184838791.png" alt="image-20241016184838791"></p><ul><li>把下面那个U映射到触发输出（TRGO），无需频繁中断，也可进行dac转换，触发定时器的的更新</li><li>上面那个ui，计数值等于更新重装值产生的中断，叫做“更新中断”</li></ul><p>通用定时器和高级定时器还支持向下计数和中央对齐计数</p><h4 id="通用定时器"><a href="#通用定时器" class="headerlink" title="通用定时器"></a>通用定时器</h4><p>模式二——最简单，最直接</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241016203406894.png" alt="image-20241016203406894"></p><p>模式1——trgi当作外部时钟使用：（主要使用etr）</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241016202456391.png" alt="image-20241016202456391"></p><ul><li>定时器的级联：黄色那条线，一个tim计时器的事件可以驱动另一个计时器的itr，这个计时器通过trgi输出，就实现了两个计时器的级联</li></ul><h4 id="三种定时器的区别："><a href="#三种定时器的区别：" class="headerlink" title="三种定时器的区别："></a>三种定时器的区别：</h4><p><strong>基本定时器</strong>：基本定时器有计数器、预分频器和自动重装载寄存器，能完成基本的计数和触发中断，主要用于生成定时中断。<strong>没有输入捕获、输出比较和 PWM 功能</strong>。常用于 DAC 触发或简单的时间间隔生成</p><p><strong>通用定时器</strong>：通用定时器具备计数、捕获比较、PWM 生成等功能。</p><p><strong>高级定时器</strong>：包括复杂的 PWM 输出、死区控制、互补输出等功能</p><h5 id="定时中断基本结构"><a href="#定时中断基本结构" class="headerlink" title="定时中断基本结构"></a>定时中断基本结构</h5><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241016204528525.png" alt="image-20241016204528525"></p><p>中断输出控制：中断输出的允许位，在一个时钟配置里，可能有很多地方申请中断，如果用不到，就把中断输出允许位设置为不允许，要用的话就设为允许</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>      <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;LED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;DELAY.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;OLED.h&quot;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;Timer.h&quot;</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">uint16_t</span> Num;</span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">OLED_Init();</span><br><span class="line">Timer_Init();</span><br><span class="line">OLED_ShowString(<span class="number">1</span>,<span class="number">1</span>,<span class="string">&quot;Num:&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">OLED_ShowNum(<span class="number">1</span>,<span class="number">5</span>,Num,<span class="number">5</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">TIM2_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)</span><br><span class="line">&#123;</span><br><span class="line">Num++;</span><br><span class="line">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//这个程序使用内部时钟</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Timer.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>                  <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Timer_Init</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB1PeriphClockCmd(RCC_APB1Periph_TIM2,ENABLE);<span class="comment">//使能时钟</span></span><br><span class="line"></span><br><span class="line">TIM_InternalClockConfig(TIM2);</span><br><span class="line"></span><br><span class="line">TIM_TimeBaseInitTypeDef TIM_TimeBaseInitStructure;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_ClockDivision=TIM_CKD_DIV1; <span class="comment">//ָ设置时钟分频（1分频）</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_CounterMode=TIM_CounterMode_Up; <span class="comment">//向上计数</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Period=<span class="number">10000</span><span class="number">-1</span>;</span><br><span class="line">TIM_TimeBaseInitStructure.TIM_Prescaler=<span class="number">7200</span><span class="number">-1</span>; <span class="comment">//72mzh / 7200 = 10k ,72mhz / 7200 = 10k</span></span><br><span class="line">TIM_TimeBaseInitStructure.TIM_RepetitionCounter=<span class="number">0</span>;<span class="comment">//重复计数（高级计时器有，现在不用）</span></span><br><span class="line">TIM_TimeBaseInit(TIM2,&amp;TIM_TimeBaseInitStructure);</span><br><span class="line"></span><br><span class="line">TIM_ClearFlag(TIM2,TIM_FLAG_Update); <span class="comment">//清除TIM2的更新中断标志位，确保定时器开始时没有残留的中断标志</span></span><br><span class="line"></span><br><span class="line">TIM_ITConfig(TIM2,TIM_IT_Update,ENABLE);<span class="comment">//开启更新中断到nvic通路</span></span><br><span class="line"></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line"></span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel= TIM2_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd=ENABLE;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=<span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority=<span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line">TIM_Cmd(TIM2,ENABLE);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/* //用的时候复制进mian</span></span><br><span class="line"><span class="comment">void TIM2_IRQHandler(void)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">if(TIM_GetITStatus(TIM2,TIM_IT_Update) == SET)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">TIM_ClearITPendingBit(TIM2,TIM_IT_Update);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h5 id="红外对管"><a href="#红外对管" class="headerlink" title="红外对管"></a>红外对管</h5><h5 id="pwm驱动呼吸灯"><a href="#pwm驱动呼吸灯" class="headerlink" title="pwm驱动呼吸灯"></a>pwm驱动呼吸灯</h5><p>更新中</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STM32学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>近世代数-二元运算及其性质</title>
      <link href="/2024/10/13/%E8%BF%91%E4%B8%96%E4%BB%A3%E6%95%B0-%E4%BA%8C%E5%85%83%E8%BF%90%E7%AE%97%E5%8F%8A%E5%85%B6%E6%80%A7%E8%B4%A8/"/>
      <url>/2024/10/13/%E8%BF%91%E4%B8%96%E4%BB%A3%E6%95%B0-%E4%BA%8C%E5%85%83%E8%BF%90%E7%AE%97%E5%8F%8A%E5%85%B6%E6%80%A7%E8%B4%A8/</url>
      
        <content type="html"><![CDATA[<h3 id="预备知识"><a href="#预备知识" class="headerlink" title="预备知识"></a>预备知识</h3><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241013103139067.png" alt="image-20241013103139067"></p><p><strong>二元运算的定义</strong>：设S为集合，映射f：SxS-&gt;S称为S上的一个二元运算</p><ul><li>S中任意两个元素都可以进行运算，且运算的结果唯一</li><li>S中任何两个元素的运算结果都属于S，这个性质成为运算的<strong>封闭性</strong></li><li>按照定义，运算的封闭性已经蕴含在定义中</li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241013104002682.png" alt="image-20241013104002682"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241013104933404.png" alt="image-20241013104933404"></p><p><strong>一元运算的定义</strong>：设S为集合，映射f : S→S 称为S上的一元运算.</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241013105049418.png" alt="image-20241013105049418"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015102834810.png" alt="image-20241015102834810"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015102847256.png" alt="image-20241015102847256"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015102857820.png" alt="image-20241015102857820"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015102908957.png" alt="image-20241015102908957"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015102918846.png" alt="image-20241015102918846"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015103014770.png" alt="image-20241015103014770"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015103032266.png" alt="image-20241015103032266"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015103057817.png" alt="image-20241015103057817"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015103728223.png" alt="image-20241015103728223"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015103810852.png" alt="image-20241015103810852"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015103834722.png" alt="image-20241015103834722"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015104002518.png" alt="image-20241015104002518"></p><ul><li>同理，如果一个二元运算有左零元θl，一定有右零元θr吗？</li></ul><p>​答案是否定的，考虑二元运算 x 。y &#x3D;  x</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015104200533.png" alt="image-20241015104200533"></p><p>（1）（2）不一定</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015104618563.png" alt="image-20241015104618563"></p><ul><li><p>如果x有左逆元yl，那x一定有右逆元yr吗?（不一定）</p><p>——单射左可逆，满射右可逆</p></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 近世代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>近世代数-代数系统及其同态与同构</title>
      <link href="/2024/10/13/%E8%BF%91%E4%B8%96%E4%BB%A3%E6%95%B0-%E4%BB%A3%E6%95%B0%E7%B3%BB%E7%BB%9F%E5%8F%8A%E5%85%B6%E5%90%8C%E6%80%81%E4%B8%8E%E5%90%8C%E6%9E%84/"/>
      <url>/2024/10/13/%E8%BF%91%E4%B8%96%E4%BB%A3%E6%95%B0-%E4%BB%A3%E6%95%B0%E7%B3%BB%E7%BB%9F%E5%8F%8A%E5%85%B6%E5%90%8C%E6%80%81%E4%B8%8E%E5%90%8C%E6%9E%84/</url>
      
        <content type="html"><![CDATA[<p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015110807262.png" alt="image-20241015110807262"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015110744452.png" alt="image-20241015110744452"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015111357536.png" alt="image-20241015111357536"></p><p>近世代数（或抽象代数）的主要研究内容就是 研究所谓的代数系统，即带有运算的集合。在近世 代数里，不管是在群、环里还是在其它代数系统 里，研究一种代数系统就是要解决这一系统的<strong>存在问题、数量问题和构造问题</strong>。如果对于一个代数系 统，这三个问题能得到圆满的解答，研究的目的就 算达到了</p><p><strong>由已知的代数系统可以通过系统的方法构建新 的代数系统，即子代数和积代数。 这些代数系统（即子代数和积代数）能够保持 或者基本上保持原有代数系统的良好性质。</strong></p><h2 id="子代数"><a href="#子代数" class="headerlink" title="子代数"></a>子代数</h2><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015112033678.png" alt="image-20241015112033678"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015112158434.png" alt="image-20241015112158434"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015112411970.png" alt="image-20241015112411970"></p><h2 id="积代数"><a href="#积代数" class="headerlink" title="积代数"></a>积代数</h2><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015112447943.png" alt="image-20241015112447943"></p><ol><li>第一步，把定义域扩充到<strong>笛卡尔积</strong></li><li>第二步，笛卡尔积中取出两个元素，进行新定义运算</li><li>第三步，定义的新运算等于两个笛卡尔积中，属于a的元素和属于b的元素分别进行原有运算</li></ol><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015113323852.png" alt="image-20241015113323852"></p><p>在代数系统的研究中，子代数和积代数是两个重要的概念。让我们逐一讨论这两个问题。</p><h3 id="1-子代数的存在性"><a href="#1-子代数的存在性" class="headerlink" title="1. 子代数的存在性"></a>1. <strong>子代数的存在性</strong></h3><ul><li><strong>子代数（Subalgebra）</strong>：子代数是从原代数系统中选出一个子集，并且这个子集在代数运算下仍然封闭（也就是说，子集中任意两个元素进行原代数系统的运算，结果仍在子集中）。子代数继承了原代数系统的运算和性质。</li></ul><h4 id="问题：设-V-是一个代数系统，-V-一定有子代数吗？或者-V-的子代数一定存在吗？"><a href="#问题：设-V-是一个代数系统，-V-一定有子代数吗？或者-V-的子代数一定存在吗？" class="headerlink" title="问题：设 ( V ) 是一个代数系统，( V ) 一定有子代数吗？或者 ( V ) 的子代数一定存在吗？"></a>问题：设 ( V ) 是一个代数系统，( V ) 一定有子代数吗？或者 ( V ) 的子代数一定存在吗？</h4><ul><li><p><strong>答案：是的，代数系统 ( V ) 总是有子代数的</strong>。</p></li><li><p><strong>解释：</strong> 每个代数系统至少有两个子代数：</p><ol><li><strong>平凡子代数（trivial subalgebra）</strong>：包含代数系统的单位元或某些特殊元素，通常是系统中唯一的零元素或单位元素（例如，在一个群中，包含唯一单位元的子集构成平凡子群）。</li><li><strong>自身子代数</strong>：代数系统本身就是它的一个子代数。</li></ol></li><li><p><strong>总结</strong>：因此，代数系统 ( V ) 至少有两个子代数，平凡子代数和代数系统本身。这意味着<strong>子代数总是存在的</strong>。</p></li></ul><h3 id="2-积代数的存在性"><a href="#2-积代数的存在性" class="headerlink" title="2. 积代数的存在性"></a>2. <strong>积代数的存在性</strong></h3><ul><li><strong>积代数（Product Algebra）</strong>：积代数是指在给定的代数系统上，构造一个新代数系统，其元素是原系统的元素对（或更高维的元素组），并且新系统中的运算是在每个坐标分量上分别进行原系统的运算。形式上，如果 ( V_1 ) 和 ( V_2 ) 是两个代数系统，那么它们的积代数 ( V_1 \times V_2 ) 是由所有形式为 ( (v_1, v_2) ) 的元素组成，其中 ( v_1 \in V_1 )，( v_2 \in V_2 )，且代数运算是分量的逐点运算。</li></ul><h4 id="问题：设-V-是一个代数系统，-V-一定有积代数吗？或者-V-的积代数一定存在吗？"><a href="#问题：设-V-是一个代数系统，-V-一定有积代数吗？或者-V-的积代数一定存在吗？" class="headerlink" title="问题：设 ( V ) 是一个代数系统，( V ) 一定有积代数吗？或者 ( V ) 的积代数一定存在吗？"></a>问题：设 ( V ) 是一个代数系统，( V ) 一定有积代数吗？或者 ( V ) 的积代数一定存在吗？</h4><ul><li><p><strong>答案：是的，积代数一定存在</strong>，但这取决于你是否给定了另一个代数系统进行积运算。</p></li><li><p><strong>解释：</strong></p><ul><li>如果你有两个代数系统 ( V_1 ) 和 ( V_2 )，你可以总是构造它们的积代数 ( V_1 \times V_2 )。积代数的定义是根据两个代数系统的逐分量运算构造的，因此，只要你有两个代数系统，积代数总是可以存在的。</li><li>对于一个代数系统 ( V ) 自身，如果你想构造与自己做积代数（即 ( V \times V )），这个积代数也是存在的。</li></ul></li><li><p><strong>总结</strong>：积代数总是可以构造的，因为积代数是一个代数运算的扩展，它取决于给定代数系统的逐点运算。因此，<strong>积代数的存在性是可以保证的</strong>，只要有至少一个代数系统（如自身或其他代数系统）来构造积。</p></li></ul><hr><h3 id="总结："><a href="#总结：" class="headerlink" title="总结："></a>总结：</h3><ol><li><strong>子代数的存在性</strong>：每个代数系统至少有两个子代数（平凡子代数和自身子代数），因此子代数总是存在的。</li><li><strong>积代数的存在性</strong>：给定一个代数系统 ( V )，它的积代数（无论是自身的积代数，还是与其他系统的积代数）总是可以构造，因此积代数也一定存在。</li></ol><h2 id="同态映射"><a href="#同态映射" class="headerlink" title="同态映射"></a>同态映射</h2><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015114138959.png" alt="image-20241015114138959"></p><ol><li>两个定义域为A,B的代数系统，一个A-&gt;B的映射</li><li>如果A中取出x，y，进行A系统内的运算以后，映射到B系统，，等于A中的两个元素先映射到B系统，再进行B系统内的运算，则这个<strong>映射f</strong>称为同态映射，简称同态</li><li>f是单射，满射，双射分别称为 单同态，满同态（此时称V2是V1的同态像，记作V1~V2）,同构</li><li>如果v1&#x3D;v2，自同态</li></ol><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015115806377.png" alt="image-20241015115806377"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241015115906592.png" alt="image-20241015115906592"></p><ol><li><p>a@b &#x3D; b@a ,f(a@b) &#x3D; <strong>f(a)#f(b)</strong> &#x3D;  f(b@a) &#x3D; <strong>f(b)#f(a)</strong>,</p><p>至于为什么要规定满同态才成立，想想便知，上面的式子其实已经隐含了一个条件，那就是对于b里面的所有能表示成<strong>f(x属于A)<strong>的元素，运算#具有交换律，那想要让所有B</strong>中元素对于运算#都具有交换律，就要保证所有B中的的元素都能表示成a中元素的f映射</strong>，也就是必须A-&gt;B的映射f为满射，即满同态</p></li><li><p>a@(b?c) &#x3D; a@c ?b@c , f(a@(b?c)) &#x3D; f(a)#f(b?c) &#x3D;<strong>f(a)#(f(b)&amp;f(c)</strong></p><p>f(a@c ?b@c) &#x3D; f(a@c) &amp; f(b@c) &#x3D; <strong>f(a)#f(c) &amp;f(b)#f(c)</strong></p><p>同理，规定满同态成立的原因，也是要把存在A中元素，能映射到B中元素的每一个角落，使得B也有这个性质</p></li></ol><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018162651115.png" alt="image-20241018162651115"></p><ul><li><strong>总结来说，对于满同态映射f，A中的 交换律 分配律 单位元 零元 逆元 均能由f映射到B</strong></li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018163006857.png" alt="image-20241018163006857"></p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241018163028610.png" alt="image-20241018163028610"></p><h3 id="注意，群理论中的ker和商集的定义-与-集合论-等价类中ker和商集的定义不一样！"><a href="#注意，群理论中的ker和商集的定义-与-集合论-等价类中ker和商集的定义不一样！" class="headerlink" title="注意，群理论中的ker和商集的定义 与 集合论 等价类中ker和商集的定义不一样！"></a><strong>注意，群理论中的ker和商集的定义 与 集合论 等价类中ker和商集的定义不一样！</strong></h3><h3 id="1-群论中的“核”和“商群”"><a href="#1-群论中的“核”和“商群”" class="headerlink" title="1. 群论中的“核”和“商群”"></a>1. 群论中的“核”和“商群”</h3><p>在<strong>群论</strong>中，核和商群是与<strong>群同态</strong>相关的概念：</p><ul><li><strong>核（kernel）</strong>：对于一个群同态 f:G→G′<em>f</em>:<em>G</em>→<em>G</em>′，核是那些被映射到目标群 G′<em>G</em>′ 中<strong>单位元</strong>的元素集合。核只包括那些在同态下“失去”区别的元素，它们被看作相等。</li><li><strong>商群（quotient group）</strong>：商群是通过核来构造的，它的元素是<strong>陪集（coset）</strong>。陪集将原群 G<em>G</em> 中那些在同态下被映射到 G′<em>G</em>′ 中同一个元素的所有元素归为一组。商群中的每个元素实际上是原群的一个等价类，这些等价类是根据映射到 G′<em>G</em>′ 中同一元素来分的。</li></ul><h3 id="2-等价关系和等价类中的“核”和“商集”"><a href="#2-等价关系和等价类中的“核”和“商集”" class="headerlink" title="2. 等价关系和等价类中的“核”和“商集”"></a>2. 等价关系和等价类中的“核”和“商集”</h3><p>在<strong>等价关系</strong>和<strong>集合论</strong>中，确实有类似的概念，但定义略有不同：</p><ul><li><strong>等价类</strong>：等价关系是集合中的一种关系，表示两个元素“等价”。如果两个元素通过某个等价关系被认为是等价的，它们属于同一个<strong>等价类</strong>。一个集合可以根据等价关系分成若干个等价类。</li><li><strong>核</strong>：在一些代数结构（如模糊集合、泛代数）中，核可以表示<strong>映射到同一元素的元素集合</strong>。这与你提到的情况类似，即核是那些通过某个映射被映射到相同元素的元素的集合。</li><li>**商集：在等价关系下，商集是将所有等价类作为集合中的单个元素看待的结果。换句话说，商集中的每个元素都是一个等价类，这些等价类包含了原集合中所有相互等价的元素。</li></ul><h3 id="3-二者的异同"><a href="#3-二者的异同" class="headerlink" title="3. 二者的异同"></a>3. 二者的异同</h3><p>尽管<strong>群论</strong>中的核和商群与<strong>集合论</strong>中的核和商集存在一些联系，但它们的定义和使用方式是不同的：</p><ul><li><strong>核的相似点</strong>：在集合论的等价类中，核可以看作是那些通过某个映射或等价关系被归为同一类的元素集合。而在群论中，核是映射到单位元的元素集合，它们也是在映射下“无法区分”的元素。</li><li><strong>商集和商群的区别</strong>：集合论中的<strong>商集</strong>是将等价类视为集合中的单个元素，而<strong>商群</strong>则不仅仅是分类，更是保留了群的结构（运算规则）。群论中的商群不仅是“分类”，还要满足群的运算性质。</li></ul><h3 id="对于群论中ker和商集的理解（相对于集合论，它有什么改变）："><a href="#对于群论中ker和商集的理解（相对于集合论，它有什么改变）：" class="headerlink" title="对于群论中ker和商集的理解（相对于集合论，它有什么改变）："></a>对于群论中ker和商集的理解（相对于集合论，它有什么改变）：</h3><ol><li><strong>为什么核是映射到单位元的元素，而不是映射到其他元素的元素？</strong><ul><li>核的定义就是用来捕捉映射下变成单位元的元素的。这个定义在同态理论中很重要，因为核的性质与同态的性质直接相关。比如，ker⁡(f)ker(<em>f</em>) 的元素决定了哪些元素在同态映射中“无变化”。</li></ul></li><li><strong>映射到其他元素的原群中的元素怎么办？</strong><ul><li>它们没有被“遗弃”，而是通过陪集的方式出现在商群 G&#x2F;ker⁡(f)<em>G</em>&#x2F;ker(<em>f</em>) 中。G<em>G</em> 中每一个映射到 G′<em>G</em>′ 中不同元素 g′∈G′<em>g</em>′∈<em>G</em>′ 的元素对应一个特定的陪集 gker⁡(f)<em>g</em>ker(<em>f</em>)。这就是商群的构造方式，商群中每一个元素（陪集）实际上代表了 G<em>G</em> 中一类被 f<em>f</em> 映射为同一 G′<em>G</em>′ 元素的元素。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 近世代数 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>stm32学习笔记001</title>
      <link href="/2024/10/12/stm3201/"/>
      <url>/2024/10/12/stm3201/</url>
      
        <content type="html"><![CDATA[<h1 id="stm32学习笔记001"><a href="#stm32学习笔记001" class="headerlink" title="stm32学习笔记001"></a>stm32学习笔记001</h1><h3 id="新建keil5工程"><a href="#新建keil5工程" class="headerlink" title="新建keil5工程"></a>新建keil5工程</h3><ol><li>装好keil5</li><li>project-&gt;new..project,选择目标文件夹</li><li>选好后把stm32库文件中有关启动和各种库粘贴到starup文件夹下；</li><li>在魔术棒-&gt;c&#x2F;c++里面，添加define 为USE_STDPERIPH_DRIVER,，并把library文件夹添加到includepath里</li></ol><h3 id="寄存器点灯（任务1-1）"><a href="#寄存器点灯（任务1-1）" class="headerlink" title="寄存器点灯（任务1.1）"></a>寄存器点灯（任务1.1）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>  </span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">    RCC-&gt;APB2ENR = <span class="number">0x00000008</span>;</span><br><span class="line">GPIOB-&gt;CRL = <span class="number">0x00300033</span>;</span><br><span class="line">GPIOB-&gt;ODR = <span class="number">0x00000000</span>; </span><br><span class="line">    </span><br><span class="line">    <span class="comment">//若要熄灭，将odr设置为高电平：</span></span><br><span class="line">    <span class="comment">//GPIOB-&gt;ODR = 0x00000001; </span></span><br><span class="line">    </span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>);</span><br><span class="line">&#125;<span class="comment">//这里下面要有最后一行空行，否则报错</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码解析：</p><ul><li>RCC-&gt;APB2ENR &#x3D; 0x00000008;</li></ul><p>​RCC代表寄存器，APB2ENR代表APB2外设时钟使能寄存器</p><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241012131906762.png" alt="image-20241012131906762"></p><p>​要想使用各个<strong>外设</strong>（定义见文末附录），就要先把这个外设<strong>使能</strong></p><p>​有官方手册可看出，GPIOB口在APB2中使能，且在“3”编号上，把3这个编号赋值1，其他为0，四个一组转换成16进制，得出0x00000008；</p><ul><li>GPIOB-&gt;CRL &#x3D; 0x00300033;</li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241012132818313.png" alt="image-20241012132818313"></p><p>GPIOx_CRL:       1.x:GPIO 后面的字母   2.CRL的L:LOW,代表低寄存器（H代表高）</p><ul><li>GPIOB-&gt;ODR &#x3D; 0x00000000；</li></ul><p>​<img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241012133231074.png" alt="image-20241012133231074"></p><p>ODR的O:output</p><ul><li>运行结果：</li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241012150653517.png" alt="image-20241012150653517"></p><h3 id="库函数点灯（任务1-2）："><a href="#库函数点灯（任务1-2）：" class="headerlink" title="库函数点灯（任务1.2）："></a>库函数点灯（任务1.2）：</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//pf11</span></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF,ENABLE);</span><br><span class="line"><span class="comment">//这句代码相当于寄存器点灯操作时的gpio使能，这里选用gpiof</span></span><br><span class="line"></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructurePF11;</span><br><span class="line"><span class="comment">//创建一个GPIO_InitTypeDef类型的结构体，结构体用于初始化gpio的各个参数</span></span><br><span class="line"><span class="comment">//分别是 mode ，pin ，speed，这三个参数在库文件中均以枚举定义</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GPIO_InitStructurePF11.GPIO_Mode = GPIO_Mode_Out_PP; <span class="comment">//推挽输出</span></span><br><span class="line">GPIO_InitStructurePF11.GPIO_Pin = GPIO_Pin_11; <span class="comment">//11号引脚</span></span><br><span class="line">GPIO_InitStructurePF11.GPIO_Speed = GPIO_Speed_50MHz; <span class="comment">//速率</span></span><br><span class="line"></span><br><span class="line">GPIO_Init(GPIOF,&amp;GPIO_InitStructurePF11); </span><br><span class="line"><span class="comment">//初始化gpio引脚，第一个参数是GPIOx（实际上是指针），第二个是结构体初始化数组的地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">GPIO_ResetBits(GPIOF,GPIO_Pin_11);</span><br><span class="line"><span class="comment">//设置输出为低电平</span></span><br></pre></td></tr></table></figure><p>涉及的可选参数详见附录</p><ul><li>效果：</li></ul><p><img src="https://raw.githubusercontent.com/TheRiddler-EdwardNygma/imgupload/main/blog-img/image-20241012150710945.png" alt="image-20241012150710945"></p><h3 id="GPIO输入输出（任务2）"><a href="#GPIO输入输出（任务2）" class="headerlink" title="GPIO输入输出（任务2）"></a>GPIO输入输出（任务2）</h3><h4 id="读取输入的方法"><a href="#读取输入的方法" class="headerlink" title="读取输入的方法"></a>读取输入的方法</h4><h5 id="读取输入寄存器（IDR）"><a href="#读取输入寄存器（IDR）" class="headerlink" title="读取输入寄存器（IDR）"></a>读取输入寄存器（IDR）</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//读取GPIO输出的方法----读取它的输入寄存器</span></span><br><span class="line"><span class="comment">//即使goio是输出模式，IDR也能反映它的状态</span></span><br><span class="line"><span class="type">int</span> pinState;</span><br><span class="line"></span><br><span class="line">pinState = (GPIOF-&gt;IDR &amp; GPIO_PIN_x) ? <span class="number">1</span> : <span class="number">0</span>;  <span class="comment">// 读取 GPIOF 11 引脚状态</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//方法2 ---- 库函数GPIO_ReadInputDataBit（基于输入寄存器）</span></span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_0)==Bit_RESET)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//Bit_SET:高电平</span></span><br><span class="line">    <span class="comment">//Bit_RESET:低电平</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="读取输出寄存器（ODR）"><a href="#读取输出寄存器（ODR）" class="headerlink" title="读取输出寄存器（ODR）"></a>读取输出寄存器（ODR）</h5><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//直接读取输出寄存器（ODR）</span></span><br><span class="line"><span class="type">int</span> pinState;</span><br><span class="line"></span><br><span class="line">pinState = (GPIOF-&gt;ODR &amp; GPIO_PIN_x) ? <span class="number">1</span> : <span class="number">0</span>;  <span class="comment">// 读取 GPIOF 11 引脚状态</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//</span></span><br></pre></td></tr></table></figure><h5 id="二者的区别"><a href="#二者的区别" class="headerlink" title="二者的区别"></a>二者的区别</h5><p>IDR反应实际物理状态，ODR反应代码设置的状态（不一定是实际）</p><p>假设有一个 GPIO 引脚配置为输出模式，在代码中设置了它为高电平，但这个引脚连接了一个外部电路，外部电路强行把这个引脚拉低了的话，二者的区别就会显现</p><ul><li><strong>IDR</strong>：反映这个引脚的实际电平为低电平，因为它受到了外部电路的影响。</li><li><strong>ODR</strong>：仍然会反映你在代码中设置的高电平，因为它表示的是你通过 MCU 设置的输出值，而不是实际的电平。</li></ul><h4 id="延时函数的实现"><a href="#延时函数的实现" class="headerlink" title="延时函数的实现"></a>延时函数的实现</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">void</span> <span class="title function_">SysTick_Init</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="comment">// SystemCoreClock 是系统时钟频率，比如 72 MHz（72000000 Hz）</span></span><br><span class="line">    <span class="comment">// 配置 SysTick 每 1 毫秒触发一次中断</span></span><br><span class="line">    SysTick_Config(SystemCoreClock / <span class="number">1000</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">volatile</span> <span class="type">uint32_t</span> sysTickCounter = <span class="number">0</span>;<span class="comment">//定义一个计数器</span></span><br><span class="line"><span class="comment">//使用 volatile 关键字是因为该变量会在中断中修改，防止编译器优化</span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SysTick_Handler</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (sysTickCounter &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        sysTickCounter--;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注意，SysTick_Handler函数在库文件中已经有定义了</span></span><br><span class="line"><span class="comment">//但是内容是空的</span></span><br><span class="line"><span class="comment">//因此，在此库文件中声明extern的计数器变量，然后在库文件中修改此函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_ms</span><span class="params">(<span class="type">uint32_t</span> ms)</span> &#123;</span><br><span class="line">    sysTickCounter = ms;</span><br><span class="line">    <span class="keyword">while</span> (sysTickCounter != <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="comment">// 等待延时结束</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>具体过程如下：</p><ol><li><p>sysTickCounter 被设置为延时的毫秒数。</p></li><li><p>每 1 毫秒，SysTick 触发中断，调用 SysTick_Handler() 函数，递减 sysTickCounter</p><p><strong>因此，起到延时作用的是SysTick_Handler() 函数</strong></p></li><li><p>当 sysTickCounter 减到 0 时，while 循环结束，延时函数完成。</p></li></ol><p>SysTick_Handler() 只有在倒计时中每隔 1 毫秒被调用一次，并且只有在 sysTickCounter &gt; 0 时它才会递减计数器。一旦计数器减到 <strong>0</strong>，SysTick_Handler() 仍然会被 1 毫秒触发一次，只不过它不再执行任何递减操作</p><h4 id="总代码如下"><a href="#总代码如下" class="headerlink" title="总代码如下"></a>总代码如下</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>      <span class="comment">// Device header</span></span></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">SysTick_Init</span><span class="params">(<span class="type">void</span>)</span> &#123;</span><br><span class="line"></span><br><span class="line">    SysTick_Config(SystemCoreClock / <span class="number">1000</span>);</span><br><span class="line">&#125; <span class="comment">//初始化时钟延迟为1ms</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">volatile</span> <span class="type">uint32_t</span> sysTickCounter = <span class="number">0</span>;<span class="comment">//初始化计数器</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">Delay_ms</span><span class="params">(<span class="type">uint32_t</span> ms)</span> &#123;</span><br><span class="line">    sysTickCounter = ms;</span><br><span class="line">    <span class="keyword">while</span> (sysTickCounter != <span class="number">0</span>) &#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="comment">//定义delay函数</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">//RCC-&gt;APB2ENR = 0x00000008;</span></span><br><span class="line">    <span class="comment">//GPIOB-&gt;CRL = 0x00300033;</span></span><br><span class="line">    <span class="comment">//GPIOB-&gt;ODR = 0x00000000;       //寄存器点灯的代码</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//__enable_irq();  //启用全局中断（但是不启用也能跑）</span></span><br><span class="line"></span><br><span class="line">    SysTick_Init();<span class="comment">//初始化计时器</span></span><br><span class="line"></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB,ENABLE);</span><br><span class="line">    <span class="comment">//使能GPIOB</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//GPIO_InitTypeDef GPIO_InitStructurePB5;</span></span><br><span class="line">    <span class="comment">//GPIO_InitStructurePB5.GPIO_Mode=GPIO_Mode_Out_PP;</span></span><br><span class="line">    <span class="comment">//GPIO_InitStructurePB5.GPIO_Pin=GPIO_Pin_5;</span></span><br><span class="line">    <span class="comment">//GPIO_InitStructurePB5.GPIO_Speed=GPIO_Speed_50MHz;</span></span><br><span class="line">    <span class="comment">//</span></span><br><span class="line">    <span class="comment">//GPIO_Init(GPIOB,&amp;GPIO_InitStructurePB5);</span></span><br><span class="line">    <span class="comment">/////点亮GPIOB5的代码</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//初始化gpio0</span></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructurePB0;</span><br><span class="line">    GPIO_InitStructurePB0.GPIO_Mode=GPIO_Mode_Out_PP;</span><br><span class="line">    GPIO_InitStructurePB0.GPIO_Pin=GPIO_Pin_0;</span><br><span class="line">    GPIO_InitStructurePB0.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line">    GPIO_Init(GPIOB, &amp;GPIO_InitStructurePB0);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_ResetBits(GPIOB,GPIO_Pin_0);</span><br><span class="line">    <span class="comment">//³õÊ¼»¯GPIOB0£¬ÇÒ½«ÆäÉèÎªµÍµçÆ½£¨ÁÁµÆ£©</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructurePB1;</span><br><span class="line">    GPIO_InitStructurePB1.GPIO_Mode=GPIO_Mode_Out_PP;</span><br><span class="line">    GPIO_InitStructurePB1.GPIO_Pin=GPIO_Pin_1;</span><br><span class="line">    GPIO_InitStructurePB1.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line">    GPIO_Init(GPIOB, &amp;GPIO_InitStructurePB1);</span><br><span class="line">    <span class="comment">//³õÊ¼»¯GPIOB1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">//pf11（让它常亮吧）</span></span><br><span class="line">    RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF,ENABLE);</span><br><span class="line"></span><br><span class="line">    GPIO_InitTypeDef GPIO_InitStructurePF11;</span><br><span class="line">    GPIO_InitStructurePF11.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">    GPIO_InitStructurePF11.GPIO_Pin = GPIO_Pin_11;</span><br><span class="line">    GPIO_InitStructurePF11.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line">    GPIO_Init(GPIOF,&amp;GPIO_InitStructurePF11);</span><br><span class="line">    GPIO_ResetBits(GPIOF,GPIO_Pin_11);</span><br><span class="line">    GPIO_SetBits(GPIOB,GPIO_Pin_1);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line"><span class="comment">//判断GPIO0的状态</span></span><br><span class="line">        <span class="keyword">if</span>(GPIO_ReadInputDataBit(GPIOB,GPIO_Pin_0)==Bit_RESET)</span><br><span class="line">        &#123;</span><br><span class="line">            Delay_ms(<span class="number">1000</span>);</span><br><span class="line">            GPIO_ResetBits(GPIOB,GPIO_Pin_1);</span><br><span class="line">            GPIO_SetBits(GPIOB,GPIO_Pin_0);</span><br><span class="line">            Delay_ms(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            GPIO_SetBits(GPIOB,GPIO_Pin_1);</span><br><span class="line">            GPIO_ResetBits(GPIOB,GPIO_Pin_0);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>输出演示视频：</p><p><video src="../../../../Microsoft%20Edge%20Download/VID_20241012_150447.mp4"></video></p></li></ul><h3 id="外部中断"><a href="#外部中断" class="headerlink" title="外部中断"></a>外部中断</h3><h4 id="一个按键的"><a href="#一个按键的" class="headerlink" title="一个按键的"></a>一个按键的</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>      <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">volatile</span> <span class="type">uint32_t</span> sysTickCounter = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI_Config</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF,ENABLE);</span><br><span class="line"></span><br><span class="line"><span class="comment">//灯的初始化</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line">GPIO_Init(GPIOF,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//按键初始化</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource0);<span class="comment">//将GPIOA0连接到EXTI外设</span></span><br><span class="line">EXTI_InitTypeDef EXTI_InitStructure;</span><br><span class="line">EXTI_InitStructure.EXTI_Line=EXTI_Line0;</span><br><span class="line">EXTI_InitStructure.EXTI_LineCmd=ENABLE;</span><br><span class="line">EXTI_InitStructure.EXTI_Mode=EXTI_Mode_Interrupt;</span><br><span class="line">EXTI_InitStructure.EXTI_Trigger=EXTI_Trigger_Falling;</span><br><span class="line"></span><br><span class="line">EXTI_Init(&amp;EXTI_InitStructure);<span class="comment">//初始化EXIT</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//开启NVIC</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI0_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line0)==SET)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(GPIO_ReadInputDataBit(GPIOF,GPIO_Pin_11)==Bit_SET)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOF,GPIO_Pin_11);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOF,GPIO_Pin_11);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line0);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">EXTI_Config();</span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="两个按键的"><a href="#两个按键的" class="headerlink" title="两个按键的"></a>两个按键的</h4><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&quot;stm32f10x.h&quot;</span>      <span class="comment">// Device header</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="keyword">volatile</span> <span class="type">uint32_t</span> sysTickCounter = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI_Config</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOF,ENABLE);</span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_AFIO, ENABLE); </span><br><span class="line"></span><br><span class="line"><span class="comment">//灯的初始化</span></span><br><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_Out_PP;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_11;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line">GPIO_Init(GPIOF,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//按键初始化</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line">GPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//第二个按键初始化</span></span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IPU;</span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_1;</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class="line"></span><br><span class="line">GPIO_Init(GPIOF,&amp;GPIO_InitStructure);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//将GPIOA0连接到exti外设</span></span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOA,GPIO_PinSource0);</span><br><span class="line">EXTI_InitTypeDef EXTI_InitStructure;</span><br><span class="line">EXTI_InitStructure.EXTI_Line=EXTI_Line0;</span><br><span class="line">EXTI_InitStructure.EXTI_LineCmd=ENABLE;</span><br><span class="line">EXTI_InitStructure.EXTI_Mode=EXTI_Mode_Interrupt;</span><br><span class="line">EXTI_InitStructure.EXTI_Trigger=EXTI_Trigger_Falling;</span><br><span class="line"></span><br><span class="line">EXTI_Init(&amp;EXTI_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//将GPIOF1连接到exti外设</span></span><br><span class="line">GPIO_EXTILineConfig(GPIO_PortSourceGPIOF,GPIO_PinSource1);</span><br><span class="line"><span class="comment">//EXTI_InitStructure已经定义，可以直接拿来用</span></span><br><span class="line">EXTI_InitStructure.EXTI_Line=EXTI_Line1;<span class="comment">//换一个中断线路</span></span><br><span class="line">EXTI_InitStructure.EXTI_LineCmd=ENABLE;</span><br><span class="line">EXTI_InitStructure.EXTI_Mode=EXTI_Mode_Interrupt;</span><br><span class="line">EXTI_InitStructure.EXTI_Trigger=EXTI_Trigger_Falling;</span><br><span class="line"></span><br><span class="line">EXTI_Init(&amp;EXTI_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//配置NVIC</span></span><br><span class="line">NVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line"><span class="comment">//为按键1配置NVIC</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">1</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line"><span class="comment">//为按键2配置NVIC</span></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = EXTI1_IRQn;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = <span class="number">2</span>;</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI0_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line0)==SET)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_ResetBits(GPIOF,GPIO_Pin_11);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line0);<span class="comment">//清空中断标志位</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">EXTI1_IRQHandler</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(EXTI_GetITStatus(EXTI_Line1)==SET)</span><br><span class="line">&#123;</span><br><span class="line">GPIO_SetBits(GPIOF,GPIO_Pin_11);</span><br><span class="line">&#125;</span><br><span class="line">EXTI_ClearITPendingBit(EXTI_Line1);<span class="comment">//清空中断标志位</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">EXTI_Config();</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="附录（信息整合）"><a href="#附录（信息整合）" class="headerlink" title="附录（信息整合）"></a>附录（信息整合）</h2><h3 id="外设相关信息"><a href="#外设相关信息" class="headerlink" title="外设相关信息"></a>外设相关信息</h3><ul><li><ul><li><h3 id="1-GPIO（通用输入输出接口）"><a href="#1-GPIO（通用输入输出接口）" class="headerlink" title="1. GPIO（通用输入输出接口）"></a>1. <strong>GPIO（通用输入输出接口）</strong></h3><h4 id="功能："><a href="#功能：" class="headerlink" title="功能："></a>功能：</h4><p>GPIO 是 STM32 控制器中最基本的外设之一，用于控制设备与外部电路之间的数字信号交互。每个 GPIO 引脚都可以独立配置为输入、输出、模拟模式或用于特定外设的功能复用模式（如 USART、I2C 等）。</p><h4 id="常见用途："><a href="#常见用途：" class="headerlink" title="常见用途："></a>常见用途：</h4><ul><li><strong>数字输入</strong>：读取按键、开关或传感器状态。</li><li><strong>数字输出</strong>：控制 LED、继电器、蜂鸣器等。</li><li><strong>PWM 输出</strong>：控制电机速度、LED 亮度。</li><li><strong>外部中断</strong>：用于检测引脚电平变化（如按键按下或松开时触发中断）。</li></ul><h4 id="特点："><a href="#特点：" class="headerlink" title="特点："></a>特点：</h4><ul><li><p>模式配置</p><p>：</p><ul><li><strong>输入模式</strong>：可以配置为浮空输入、上拉输入或下拉输入。</li><li><strong>输出模式</strong>：支持推挽输出和开漏输出，适合驱动不同类型的负载。</li><li><strong>模拟模式</strong>：用于连接模拟信号输入，如 ADC（模数转换器）的模拟信号通道。</li><li><strong>复用功能</strong>：引脚可以作为外设的信号引脚使用，如 USART 的 TX&#x2F;RX。</li></ul></li><li><p><strong>外部中断</strong>：支持引脚的上升沿、下降沿或双边沿触发中断事件，允许系统对外部事件做出快速响应。</p></li><li><p><strong>快速切换</strong>：GPIO 引脚的状态可以通过寄存器快速读取和修改，具备高效的响应能力。</p></li></ul><h4 id="实际应用："><a href="#实际应用：" class="headerlink" title="实际应用："></a>实际应用：</h4><p>配置 GPIO 为输出模式控制一个 LED，当按键按下时通过外部中断机制点亮 LED。</p></li></ul></li></ul><pre><code>------   ### 2. **USART / UART（通用异步收发器）**   #### 功能：   USART（Universal Synchronous Asynchronous Receiver Transmitter）或 UART 是常用于串行通信的外设，支持异步和同步通信。它通常用于与计算机、外部模块或其他微控制器之间的通信。   #### 常见用途：   - **调试接口**：将调试信息发送到串口终端，帮助开发人员实时查看系统运行状态。   - **模块通信**：与蓝牙模块、GPS 模块、GSM 模块等外设进行数据交互。   - **设备通信**：与传感器、执行器、其他微控制器通信。   #### 特点：   - **波特率**：支持多种波特率设置（如 9600、115200），可以适应不同速度的通信需求。   - 数据格式     ：灵活设置数据位、停止位、校验位等，适应不同协议需求。     - 常见配置：8 数据位、1 停止位、无校验位。   - **硬件流控**：支持 RTS/CTS 硬件流控，减少数据丢失风险，特别适合高速通信。   - **中断和 DMA 支持**：可以通过中断或 DMA 传输数据，减少 CPU 负担，提高系统效率。   - **多处理器模式**：允许多处理器间的串行通信，通过地址标识进行选择性通信。   #### 实际应用：   使用 STM32 的 `USART2` 端口与计算机串口终端通信，将传感器数据通过 UART 发送到终端，以进行实时监控。------   ### 3. **SPI（串行外设接口）**   #### 功能：   SPI（Serial Peripheral Interface）是一种高速的同步串行通信接口，通常用于与外部传感器、存储设备（如 EEPROM、Flash）和显示器等外设进行通信。STM32 的 SPI 接口支持全双工通信，可以同时发送和接收数据。   #### 常见用途：   - **存储器通信**：与 SPI 闪存或 EEPROM 进行高速读写操作。   - **显示器控制**：与 OLED、LCD 屏幕进行通信，快速刷新显示内容。   - **传感器数据读取**：获取 MEMS 传感器、加速度计、陀螺仪等传感器的数据。   - **音频模块**：通过 SPI 与音频芯片通信，进行音频数据的传输和控制。   #### 特点：   - **主从模式**：SPI 支持主从通信模式，STM32 可以配置为主设备或从设备。   - **高数据速率**：SPI 的通信速率可达几十 MHz，适合高速数据传输应用。   - **全双工通信**：支持同时发送和接收数据，适合需要高速双向通信的场景。   - **多从设备支持**：通过片选引脚（CS），可以连接多个从设备，灵活控制不同的外设。   #### 实际应用：   使用 STM32 作为主设备，通过 SPI 接口读取外部 EEPROM 的数据，或者驱动 OLED 显示屏显示图像数据。------   ### 4. **I2C（集成电路互联）**   #### 功能：   I2C 是一种常用的双线串行通信协议，适用于低速外围设备（如传感器、存储器、RTC 模块）的通信。它只需要两根线：SCL（时钟）和 SDA（数据），即可在多主多从架构中进行通信。   #### 常见用途：   - **传感器通信**：与温度传感器、压力传感器等低速设备通信。   - **存储器接口**：如 I2C EEPROM，用于存储配置信息或日志。   - **RTC（实时时钟）模块**：读取实时时钟的日期和时间信息。   - **显示模块**：驱动 I2C 协议的 OLED 或 LCD 显示屏。   #### 特点：   - **双线通信**：使用 SDA 和 SCL 两条线，减少通信接口数量。   - **多主多从支持**：允许多个设备同时连接到同一条总线上，支持多主设备通信。   - **地址识别**：每个从设备都有唯一的 7 位或 10 位地址，主设备通过地址访问特定从设备。   - **多种通信速率**：支持标准模式（100kHz）、快速模式（400kHz）和高速模式（1MHz）。   #### 实际应用：   使用 STM32 的 I2C 接口与温度传感器通信，周期性读取环境温度，并通过串口将数据发送到电脑进行监控。------   ### 5. **ADC（模数转换器）**   #### 功能：   ADC（Analog to Digital Converter）用于将模拟信号转换为数字信号，是读取传感器等模拟设备数据的重要接口。STM32 的 ADC 通常具有多通道和高分辨率的特点，适用于高精度的模拟信号采集。   #### 常见用途：   - **传感器信号采集**：采集温度传感器、电位器等模拟设备的信号。   - **电压监测**：监测电池电压、电源电压等，防止过充或欠压情况。   - **音频输入**：在音频处理应用中，采集麦克风或音频信号。   - **环境监测**：用于光照强度、气体浓度等的模拟数据读取。   #### 特点：   - **多通道支持**：STM32 的 ADC 通常支持多通道采样，可以轮询多个模拟信号源。   - **高分辨率**：支持 12 位甚至 16 位分辨率，确保高精度的数据转换。   - **连续转换模式**：可以配置为连续采样模式，持续采集模拟信号。   - **DMA 支持**：与 DMA 协同工作，允许大数据量的自动采集而无需占用 CPU。   - **采样时间可调**：可以根据不同输入信号源的阻抗调整采样时间，确保准确性。   #### 实际应用：   使用 ADC 接口读取电位器的模拟信号，通过 ADC 转换为数字信号后进行处理，调整系统的输出参数，如控制 LED 的亮度或调整电机转速。------   ### 6. **TIM（定时器）**   #### 功能：   定时器（TIM）是 STM32 中非常强大的外设，支持计时、事件控制、PWM 生成、输入捕获、输出比较等功能。STM32 中有多种类型的定时器，可用于不同的任务。   #### 常见用途：   - **时间延迟**：生成精确的时间延迟，用于定时任务或周期性中断。   - **PWM 生成**：控制电机转速、调光 LED 亮度、音频输出等。   - **输入捕获**：测量输入信号的脉冲宽度或频率，如测速应用。   - **事件计数**：用于记录外部事件的发生次数，如脉冲计数。   #### 特点：   - **多种模式**：支持单次计时、周期性计时等多种模式。   - **高精度计时**：可以通过定时器预分频器实现高精度时间控制，支持从微秒级别到数秒级别的计时任务。   - **PWM 输出**：定时器支持多通道 PWM 输出，可以同时控制多个设备，如控制多路 LED 的亮度或多轴电机的速度。   - **输入捕获/输出比较**：输入捕获用于精确测量输入信号的时间特性，输出比较用于在特定时间输出控制信号。   #### 实际应用：   配置 STM32 的 TIM 定时器生成 PWM 信号控制直流电机的转速，或者通过输入捕获功能测量外部信号的频率。</code></pre><h3 id="GPIO-InitTypeDef，EXTI-InitTypeDef，NVIC-InitTypeDef等常用的def的各个参数及使用方法"><a href="#GPIO-InitTypeDef，EXTI-InitTypeDef，NVIC-InitTypeDef等常用的def的各个参数及使用方法" class="headerlink" title="GPIO_InitTypeDef，EXTI_InitTypeDef，NVIC_InitTypeDef等常用的def的各个参数及使用方法"></a>GPIO_InitTypeDef，EXTI_InitTypeDef，NVIC_InitTypeDef等常用的def的各个参数及使用方法</h3><h3 id="1-GPIO-InitTypeDef"><a href="#1-GPIO-InitTypeDef" class="headerlink" title="1. GPIO_InitTypeDef"></a>1. <strong>GPIO_InitTypeDef</strong></h3><p><code>GPIO_InitTypeDef</code> 是用于配置 GPIO 引脚的结构体。它的成员变量决定了引脚的工作模式、输出类型、速度以及上下拉电阻配置。</p><h4 id="结构体定义："><a href="#结构体定义：" class="headerlink" title="结构体定义："></a>结构体定义：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">typedef struct &#123;</span><br><span class="line">  uint32_t GPIO_Pin;        // GPIO 引脚号</span><br><span class="line">  GPIOMode_TypeDef GPIO_Mode; // GPIO 模式（输入、输出、复用、模拟）</span><br><span class="line">  GPIOSpeed_TypeDef GPIO_Speed; // GPIO 速度</span><br><span class="line">  GPIOOType_TypeDef GPIO_OType; // GPIO 输出类型（推挽/开漏）</span><br><span class="line">  GPIOPuPd_TypeDef GPIO_PuPd;   // GPIO 上拉/下拉电阻配置</span><br><span class="line">&#125; GPIO_InitTypeDef;</span><br></pre></td></tr></table></figure><h4 id="参数说明："><a href="#参数说明：" class="headerlink" title="参数说明："></a>参数说明：</h4><ul><li>**<code>GPIO_Pin</code>**：指定要配置的 GPIO 引脚。可以是以下常量的组合，用于同时配置多个引脚：<ul><li><code>GPIO_Pin_0</code>, <code>GPIO_Pin_1</code>, <code>GPIO_Pin_2</code>, …, <code>GPIO_Pin_15</code>。</li></ul></li><li>**<code>GPIO_Mode</code>**：设置引脚的工作模式。可以选择以下模式：<ul><li><code>GPIO_Mode_IN</code>：输入模式。</li><li><code>GPIO_Mode_OUT</code>：输出模式。</li><li><code>GPIO_Mode_AF</code>：复用模式（用于外设，如 USART、SPI 等）。</li><li><code>GPIO_Mode_AN</code>：模拟模式（用于 ADC）。</li></ul></li><li>**<code>GPIO_Speed</code>**：配置引脚的速度，主要用于输出模式。速度取决于应用需求以及外设要求：<ul><li><code>GPIO_Speed_2MHz</code>：低速（2MHz）。</li><li><code>GPIO_Speed_25MHz</code>：中速（25MHz）。</li><li><code>GPIO_Speed_50MHz</code>：高速（50MHz）。</li><li><code>GPIO_Speed_100MHz</code>：非常高速（100MHz）。</li></ul></li><li>**<code>GPIO_OType</code>**：输出类型，决定引脚是推挽还是开漏输出。主要用于输出模式：<ul><li><code>GPIO_OType_PP</code>：推挽输出。</li><li><code>GPIO_OType_OD</code>：开漏输出。</li></ul></li><li>**<code>GPIO_PuPd</code>**：配置上拉或下拉电阻，主要用于输入模式：<ul><li><code>GPIO_PuPd_NOPULL</code>：无上拉或下拉电阻。</li><li><code>GPIO_PuPd_UP</code>：上拉电阻。</li><li><code>GPIO_PuPd_DOWN</code>：下拉电阻。</li></ul></li></ul><h4 id="使用示例："><a href="#使用示例：" class="headerlink" title="使用示例："></a>使用示例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);  // 使能 GPIOA 时钟</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_5;              // 配置 PA5 引脚</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;          // 输出模式</span><br><span class="line">GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;         // 推挽输出</span><br><span class="line">GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;      // 50MHz 速度</span><br><span class="line">GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;       // 无上拉/下拉</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);                 // 初始化 GPIOA 引脚</span><br></pre></td></tr></table></figure><h3 id="2-EXTI-InitTypeDef"><a href="#2-EXTI-InitTypeDef" class="headerlink" title="2. EXTI_InitTypeDef"></a>2. <strong>EXTI_InitTypeDef</strong></h3><p><code>EXTI_InitTypeDef</code> 用于配置外部中断（EXTI），STM32 的 EXTI 模块可以通过 GPIO 引脚引发外部中断。</p><h4 id="结构体定义：-1"><a href="#结构体定义：-1" class="headerlink" title="结构体定义："></a>结构体定义：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">typedef struct &#123;</span><br><span class="line">  uint32_t EXTI_Line;    // 外部中断线</span><br><span class="line">  EXTIMode_TypeDef EXTI_Mode; // 中断模式或事件模式</span><br><span class="line">  EXTITrigger_TypeDef EXTI_Trigger; // 中断触发条件（上升沿、下降沿、双边沿）</span><br><span class="line">  FunctionalState EXTI_LineCmd;     // 外部中断使能或禁用</span><br><span class="line">&#125; EXTI_InitTypeDef;</span><br></pre></td></tr></table></figure><h4 id="参数说明：-1"><a href="#参数说明：-1" class="headerlink" title="参数说明："></a>参数说明：</h4><ul><li>**<code>EXTI_Line</code>**：指定要配置的 EXTI 线，范围从 <code>EXTI_Line0</code> 到 <code>EXTI_Line15</code>，对应不同的 GPIO 引脚（例如，<code>EXTI_Line0</code> 对应 GPIO 0 号引脚）。</li><li>**<code>EXTI_Mode</code>**：配置 EXTI 的模式，可以是以下两种：<ul><li><code>EXTI_Mode_Interrupt</code>：中断模式。</li><li><code>EXTI_Mode_Event</code>：事件模式，不产生中断，但可以触发事件。</li></ul></li><li>**<code>EXTI_Trigger</code>**：设置中断触发条件，可以选择以下触发条件：<ul><li><code>EXTI_Trigger_Rising</code>：上升沿触发。</li><li><code>EXTI_Trigger_Falling</code>：下降沿触发。</li><li><code>EXTI_Trigger_Rising_Falling</code>：上升沿和下降沿都触发。</li></ul></li><li>**<code>EXTI_LineCmd</code>**：用于使能或禁用 EXTI 线：<ul><li><code>ENABLE</code>：使能 EXTI 线。</li><li><code>DISABLE</code>：禁用 EXTI 线。</li></ul></li></ul><h4 id="使用示例：-1"><a href="#使用示例：-1" class="headerlink" title="使用示例："></a>使用示例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">EXTI_InitTypeDef EXTI_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);  // 使能 SYSCFG 时钟</span><br><span class="line">SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA, EXTI_PinSource0); // 将 PA0 配置为 EXTI_Line0</span><br><span class="line"></span><br><span class="line">EXTI_InitStructure.EXTI_Line = EXTI_Line0;              // 配置 EXTI Line0</span><br><span class="line">EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;     // 中断模式</span><br><span class="line">EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;  // 上升沿触发</span><br><span class="line">EXTI_InitStructure.EXTI_LineCmd = ENABLE;               // 使能 EXTI Line0</span><br><span class="line">EXTI_Init(&amp;EXTI_InitStructure);                         // 初始化 EXTI</span><br></pre></td></tr></table></figure><h3 id="3-NVIC-InitTypeDef"><a href="#3-NVIC-InitTypeDef" class="headerlink" title="3. NVIC_InitTypeDef"></a>3. <strong>NVIC_InitTypeDef</strong></h3><p><code>NVIC_InitTypeDef</code> 用于配置嵌套向量中断控制器 (NVIC)，用于管理中断优先级并使能中断请求。</p><h4 id="结构体定义：-2"><a href="#结构体定义：-2" class="headerlink" title="结构体定义："></a>结构体定义：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">typedef struct &#123;</span><br><span class="line">  uint8_t NVIC_IRQChannel; // 要配置的中断通道</span><br><span class="line">  uint8_t NVIC_IRQChannelPreemptionPriority; // 抢占优先级</span><br><span class="line">  uint8_t NVIC_IRQChannelSubPriority;        // 响应优先级</span><br><span class="line">  FunctionalState NVIC_IRQChannelCmd;        // 中断使能或禁用</span><br><span class="line">&#125; NVIC_InitTypeDef;</span><br></pre></td></tr></table></figure><h4 id="参数说明：-2"><a href="#参数说明：-2" class="headerlink" title="参数说明："></a>参数说明：</h4><ul><li>**<code>NVIC_IRQChannel</code>**：指定要配置的中断通道。例如：<ul><li><code>EXTI0_IRQn</code>：EXTI Line0 的中断。</li><li><code>TIM2_IRQn</code>：TIM2 定时器的中断。</li></ul></li><li>**<code>NVIC_IRQChannelPreemptionPriority</code>**：设置抢占优先级，数值越低优先级越高。在 STM32F4 中通常支持 4 位优先级划分。</li><li>**<code>NVIC_IRQChannelSubPriority</code>**：设置响应优先级，用于同一抢占优先级下的多个中断之间的调度，数值越低优先级越高。</li><li>**<code>NVIC_IRQChannelCmd</code>**：使能或禁用中断通道：<ul><li><code>ENABLE</code>：使能中断通道。</li><li><code>DISABLE</code>：禁用中断通道。</li></ul></li></ul><h4 id="使用示例：-2"><a href="#使用示例：-2" class="headerlink" title="使用示例："></a>使用示例：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;                   // 配置 EXTI Line0 中断</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x01;        // 抢占优先级 1</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x01;               // 响应优先级 1</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;                     // 使能中断</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);                                     // 初始化 NVIC</span><br></pre></td></tr></table></figure><hr><h3 id="综合示例：外部中断配置"><a href="#综合示例：外部中断配置" class="headerlink" title="综合示例：外部中断配置"></a>综合示例：外部中断配置</h3><p>假设我们要配置一个按键中断，按下按键时通过 EXTI 触发 PA0 引脚的中断，以下是完整的配置流程：</p><ol><li><strong>配置 GPIO 引脚为输入模式</strong>：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">GPIO_InitTypeDef GPIO_InitStructure;</span><br><span class="line">RCC_AHB1PeriphClockCmd(RCC_AHB1Periph_GPIOA, ENABLE);</span><br><span class="line"></span><br><span class="line">GPIO_InitStructure.GPIO_Pin = GPIO_Pin_0;            // 配置 PA0</span><br><span class="line">GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;         // 输入模式</span><br><span class="line">GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_NOPULL;     // 无上拉/下拉</span><br><span class="line">GPIO_Init(GPIOA, &amp;GPIO_InitStructure);</span><br></pre></td></tr></table></figure><ol><li><strong>配置 EXTI</strong>：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">EXTI_InitTypeDef EXTI_InitStructure;</span><br><span class="line"></span><br><span class="line">RCC_APB2PeriphClockCmd(RCC_APB2Periph_SYSCFG, ENABLE);</span><br><span class="line">SYSCFG_EXTILineConfig(EXTI_PortSourceGPIOA, EXTI_PinSource0);  // 配置 EXTI Line0 对应 PA0</span><br><span class="line"></span><br><span class="line">EXTI_InitStructure.EXTI_Line = EXTI_Line0;                    // 配置 EXTI Line0</span><br><span class="line">EXTI_InitStructure.EXTI_Mode = EXTI_Mode_Interrupt;           // 中断模式</span><br><span class="line">EXTI_InitStructure.EXTI_Trigger = EXTI_Trigger_Rising;        // 上升沿触发</span><br><span class="line">EXTI_InitStructure.EXTI_LineCmd = ENABLE;                     // 使能 EXTI Line0</span><br><span class="line">EXTI_Init(&amp;EXTI_InitStructure);</span><br></pre></td></tr></table></figure><ol><li><strong>配置 NVIC</strong>：</li></ol><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">NVIC_InitTypeDef NVIC_InitStructure;</span><br><span class="line"></span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannel = EXTI0_IRQn;               // 配置 EXTI0 中断</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0x00;   // 抢占优先级 0</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0x00;          // 响应优先级 0</span><br><span class="line">NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;                // 使能中断</span><br><span class="line">NVIC_Init(&amp;NVIC_InitStructure);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> STM32学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>栈和队列</title>
      <link href="/2024/09/23/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/"/>
      <url>/2024/09/23/%E6%A0%88%E5%92%8C%E9%98%9F%E5%88%97/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="71e67dd695711125465c4d86331e9c7b25bd28162f437247c914a680f654f2b7"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>函数参数中有链表时，对&amp;符号的理解与讨论</title>
      <link href="/2024/09/22/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%B8%AD%E6%9C%89%E9%93%BE%E8%A1%A8%E6%97%B6%EF%BC%8C%E5%AF%B9&amp;%E7%AC%A6%E5%8F%B7%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E8%AE%A8%E8%AE%BA/"/>
      <url>/2024/09/22/%E5%87%BD%E6%95%B0%E5%8F%82%E6%95%B0%E4%B8%AD%E6%9C%89%E9%93%BE%E8%A1%A8%E6%97%B6%EF%BC%8C%E5%AF%B9&amp;%E7%AC%A6%E5%8F%B7%E7%9A%84%E7%90%86%E8%A7%A3%E4%B8%8E%E8%AE%A8%E8%AE%BA/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ce9ed1573c7b04aeb99144c08b0213ee25a318ffe54abc0dd583952371077f75"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
            <tag> 细节辨析 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>线性表</title>
      <link href="/2024/09/18/%E7%BA%BF%E6%80%A7%E8%A1%A8/"/>
      <url>/2024/09/18/%E7%BA%BF%E6%80%A7%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="3757390bd6cafb3a282c7c3c1078a6109222058dd884dd517e9b2aaa6aee4146"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树和二叉树</title>
      <link href="/2024/09/18/%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/"/>
      <url>/2024/09/18/%E6%A0%91%E5%92%8C%E4%BA%8C%E5%8F%89%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="10b9d48a408914d3c33304ad59e0b35ba79823657b1c627baff3f805dee70ef5">fb736e647d9d25782ff93cbaa84e35841b0caaa851ee6448954d33417c9e3a5e7fa6522a60fdb59309888f9f8fa984fc83ca5cd2979e80b85b0c14e05e62263f17988240c81b1fffe8da0ffe242009b706c4755bf8994ac02ebcd9e97d1e5b7848fac23b918cf2c7f280934f6b00b6b0636ffc2cccc661a367935e1ff9473de8c2a2bc29766bc791929873c2fc6ec1bed319c8b2af561bf6cad416ea5b55b456ab425069bc1627932f675dab0e265a86b7005901f3d2d840300eadf3ab54fe3727a1926629b12dddb4240c2525edbee4f6557c1cfb5d1f162ce772d780f78354a6348ae173cf9b076ba16dd75c4d15baf8471e8f8bf60855d9c38a9cfb6e618d078d4e0acad8072cdef99b51357a3cc7d664cf56ad4a50f9d37c1b2076081d0c79efc930c3d5d56827961c37c2b559c748e4db7791b7a27927294b480c566d856ff8833235b7404ba77fe6ca3ce8b387541fd298d5cf5934d79b5874c3b8db7e19d72b9a9fb380a2e05a743ab6fbe8707395085c497c11a605625e14094eea5fd4c70851b4d5e7de26f47cca8a0ae1726a51d076c84b721276e9442c32975cbf5ae1f54460830f5151eadd888eb36e0181f9237e8ccc237ff7f093f075d62e86bfa89e8349156a9070f99b38ee3eb4242205273577fb6620c7f3f38a144bb17f6650c7c4e79d47e3e4fcb71371bcbb512764d99b9815a357bd6aaf5604894485f77c07ce2d78367a454bf13ea286807e9a257c007692f5717555b857083f8487597e8a41d060f0209a7c42e96276c60ef7c5eded1154239108838789406b02a6bf25a326cf1d73f3110d6f2afaf7f8bc1470551be1294cc029b8c656c7004c26769c89210baaab23a5092d04944fcb8bd38ca1a29971e33db9a2d742150246468e08580814d21418cd7b6143c467d2bb3136c80c855cf9daad1a024afd792a982a39410e6bdd8866a9d782f4834422e19497fc2aa4ad31804720ba9e12d17008921b2bfe2834a276cc4f530f3430759c22c4f252ec9eeb28991a2d3d231714f74581ac737e31cb79c5a2c335f82cba6c43f4a6bf3b07fb6094032488b0d3daa2bddd0f5d5b75a16fd63382ba0e031cf25196bb0e7b99ead81335bcae7866da0a2ea65d083429f1fea73d5e2b8a49f011a2c882e5b531053002015b6515a3118b3a12f78f7823040c9cbce340572598df89c98a2b937df1ffd4d3e4912ec658d078c392f96a93c4b24972bb54e4bfde1ec9894da243ff426cb8186ce3259e145849f142ed8fde8bab76389736cae4a960b63916c4142d418bdf9434064d5ff258943240965e5bd09c8f7d2e09c85985adb5afa9406cf0ec7932a82a5238174337bca13bc7c9e9a08b6a6312fecd3529e8bb274c0ea10dfdd97ec2c767e7738f8d8f4e3d80ad4379d78a525fd8fbd1d956eed87b327339bdf3ab05f00c7807f46ff4d72e4cd8a13f994911279178d52cc14752f20ab036165d2fc93a914387727a090d123de4514eca56994ae783ab99fd2d5a489183751f879d585ff576acca4184b665da35c748b3d1904b10542754ef37e199d8813a19e90ed154c5c76e15f095b55d44097efb658db6706263a0e245ff8e43fd40102b8999ad13b69e5ab4b378db4811de5a36f6acf5a671d789a74e4ffc915ef4b925a0c14fa8086063d8036640549d15fe6ac80ed1f437d7beaf1dc9f55cd1eaf8f14ffb3559d712ff31ec981e6170868a010ad9fe7e6bb17a1df4e0a108814981e889f01daa625eee0f97c5f8bc688da739b9c0fbf561f1f7ee66b15300306a5a4ee53823f0d658f4739176ce86908953822e9b97a6cf53c34fdf2eb117c057cfcc69b005d716a7c723f547503205d276523d8646f7828ced07d7ff4da395cf9bd7a5c4cb6284ab321cdf09ee18f2f4e153d159c16b9b4e89b17b839991a93cf51273468265141bb46bc91c01c8da4342c649bdd74fbfae0804128c8b0e4f42584b8f5ee04427c01fc9ce59fd0093266fecee138d7e79fee89e2ea214e3bfe200bd11b48e5742ba11b89ba92c30b8380251dc18f098386972f880d767d474bb7a53635b3f4b4ab3f7e3bea3c49d2cbb7af71306c3574b7517e8226fdb1c8a4f6e89c249072b15b9f23e4b62e1f93c22229153557d6b09da888746bba5c169c8a08dd3b7349a850e22c0a6e92b8b8de4012356986eaaacfa17d1bcca7e2ccceffa8712da3f6eb01343dab68dcc73339ee44c93fe36e95d403032cc4b2aba215b68f615af554358c2d348ea76268ce9fb8ac1c60d4c7135ca52a473</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组广义表-数据结构与算法</title>
      <link href="/2024/09/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/"/>
      <url>/2024/09/18/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E4%B8%8E%E7%AE%97%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="fed964dfc5c4e42b69868f07690c9e044f9aab52844915ff79bb650a1330420f">fb736e647d9d25782ff93cbaa84e35849f0605b03c096bb6a6a0e293b54c9d1e2ed55b1c9c1141ef7e879495e669d4b119febeb2712fa5357b896eba00f51b0750ef1c9d08c07b19019d3ad845c8b524ff4b65c34739a8df99ae985a4c9d5d8c4d84fbb0f6d4176128ea79c4185b5508d1a9d46a0fbb007584b8a08ac83de33986c4b68cf69ff86ae34641d72090428483010488116ea2311dc1217790f38803e7a389ef0f1dc48f0e45dd45c32a7733310ba8a8a3a1f52ec32826ba075ebc4605f94c7130eb926161cd32fd909519b9e6eda2cf24e0c33959b182864fcf6aeb474eb09c19cb042183325a7a9c173fd97bc41d67eb41f1e936cc78d75049cc3e953d83d54e702e9cceb968917aed65c3906f08f95d51ed30704f05a4056e5ddfee894d9949455fcbb771b6788530a7fe307abc4c5bddae589e830f5d3d9b9c337fbe8c7d765f7bfe455fadf4805745d1540a03e21a0e91ca14ee91074e86fc9d6e35bbd4e5ffb4e611684ab3d44f154aba75658f5cd782e5e9a7f03972632d4fc78fbdd5725a9c9b0b54bc21d544c031d31d6d1f07bdb57cd5106414172be6837049665c0d600d69ce93426a9dabff9e5271560e7c86251a19239c42ad4316a4fef3487a9381d894b2d497d9a9602938ebd737995d8fb7ad4f0bc164b36749faa2f4950e12c4db0bc0a9bb5262b4569aea3fa88b9f574e98110e1edc506a4f2c4f6f1715472560b269743896602764e7d4d5b1aabbd63dd2512620447a118182fa31f2e0cdb31be62087411bf5fd4de51de83ad7f303d8385e6f78417980547df4b0859a41291d5a7a7f7fe50f07024d53837715077a3d5b1524ac5c6420f54ef93ddddfaae8e32a1408ba2f31b9792d98d5d4c8c8ae6dc5edb4d09ea6f68170a4ec3b1a5a3d44b8803dfe70042940e692926856779051f4029310f5459f42fbedac345faeab5ce16d0092a031d2fe2c50f6e973b70323cbc8fad4aa6ba2d0aa4129d5af6f68f536df26f7a5291a65e42d010c74ba133629d49873ec5ecda0348b278deab1e0f9dc15bdb594e03c3289d0876f7b8632cc2c93ed06f148d8b592feafc3ecc9c8d6257dbef53d3dbfe000984a22e4b259d9e265a3c2562acfeb035ac9b6461287c746e66f98f381817efa749bdcbcc71daf31b8e03e0caf2d0d959304156af07335de1c13bc656dcb0b8e75f12f422f8f32cad798cd0b376b222ea04fcc61f4e8b340111e49e891ebd5c4e5dcc6f3a2584bc26fd8a2c42a69316358dbcebc54e12b8c962d53c40c3d7eec16b2da834c17191ce533c891159d557a4245f40fafcea68122b669a87098a43a4dbeab00413d96d9998f2098083523d7807b09d7785783ebe4c0a60a8ddc093c8635cc612e9f7b99aac6353f39f0d15211f0adfb4dabfffcddf85a4a8dd032bb998c6224e53a98ece3ccd1c19e273ff826ff084fb680c7d99c406422dbf95a7f1a59707532710e2488f49c91837a108920c7800dba420f3eca0d2a38fcb80cc21cdc202dad7fd4730f2f88166a8e6bc0509c0eae2d15d1a3a23deb354a30a625a603b30fefa30b0f9b3d04bcb2e6c86deb2ffb091a8e1dea919fa4272b341c7b387e532f5d42e0125442b8a22e1f679e5d6487804c291ebd5e38108ab12eda8afed5b655a411d9edf32614f49d66e1c5eb76c663b1aa400f513cdcebd4757296af9699cda2e4e0f1665b8b3601b74555b15024cec42ed9a0d0f2a92b1128a0aaa67766f01557a1023a334cac09fe00357ce8e8b7cb7c0f54e90641aa6a2d98735a5a0d3e5bf7ba4d47da7449afe3d41a430812a3622add1673e16b4da49892efdde06f9d17754e5d3365dddfabaa3de31002b91e4b0495ca7fed4a06ddaa1b2c902c470339420523686792126ae892df03a556104e57aeb339a076807479e539e4cfe24445886a11ad6ddb73bb1f31c6605780dff67b85de4acd0a630edd1ef6d2689f6c6d39f7a16f522bb26dca9bd135589a7dba1fd2ba3b60bf2e5e760fee8c4ab04b738035be0340a0cccbf93d1f4e51b2929ade724179326e3449335efa464c326d38f9feaa52a261c2d9727abad9e58466be603f10fc42d786010399f34a60d0ce639166c5020318a5eb78df230b5757b52580ad80bcc3263d8ecdd5aa70d41214c356dd927e44191aa2d05f1ea64518f4513075dcecc2026d3da8dfec07bd739b5aaaf9f91a552802af1285a906fef58a85036be79f2270127faed005232bfb2be5ff6e70277c8cc52957b688ca4ed802fb03c1faedf12ad0617fc839bf6bb0abe3862b3347e07b1453b60483471f2550fc89556c363cb669217dc25b7a798f1c532dfea71297cc6dd99b0e722287a52f2638f04b5042dc22bc538944ebf4572ecba2fff300205039f7722918b6e5824461e89ab587794e83b86b87e8493093b468ff4f47dcc30af24bcd87a5fa7efff39224fddb53c04fbee14ec65369c5dac6eaa55c8c3c5a9a83990e4ac27292ed3f81ddbedacb038e69944456283dc4b4dfd4c026755070a0d8c5f697c1a685e701f4749bb16a0f6a5972f40ef2280e84b5ca915847a8619b503e6530161f2b5ba7ee08172c860eb64302c884f6434ef44efdb6231f0418d7a7b8db83dc5e26e03b774fb49290ca2a5cf9a9bf892d632b6171d8c0780342ed82ee6c99ad40721eace1e54d7d6f40a7d7e0bcf3a16d29d22b13b45fb7070ea814c678b0f7e03fc53302472cc146c8b65f8c79da4bab28b0865996bfe92e9e76d671b1b933bd05a214c5638e23dd02f9ad72d9bf33de010e661e71829abd8874280d163534c52d96d9eb5d3ddea387078091a5ac4942aaf9965d184b0e84f2366fba1fa165700ec9581b291389bce160de15950ea5eda007dc4c69e4ed0e8fe4065200efbfdf462f5784db385a4f7e32afd4358046d1187153de07f499386e48fda8334e2ce742b916afe228b1830a2487847f38154e1c68dfcbd5bb0bea9bd877009abe4887de10bd4484c8f01e0ae14bc70ee6eec02cb268b0574908b10eff6da7d9d91f0ec42ff76d5aa074c362c3b6d3006162f969427268df4c38f42d0d10988047d081f40c0e630ae6b7bf91f3268eb0d5813538aa6ad535baee41c582935a734134be289e1f7b99440b4ba75ebccd4c0861ab454a986fc58b68b186eb40fbfa95c686628ec9b215072b5225b878290695e1ada1778f290d4957b8c345c66aee2e40a23e11e35b5a9891e3799ad240c286a20f4e2a9a66b38dd71fb93d1a0ec0762eb104d19ded872b980aea0dc72746b17e8030749255a9af42823a7c97fbf41878a38d43824b2970669cc48ff28157b897f499a70735c528fb3bc47c1a07cb607d5673d3602a84181683ccf1136deaa261c69b3ddb6d54313f740b5c675483f11089ce11566c03b003f38cd12884aab6ebdc1b29bfb9ccb960e5b4c06cd2be63a91dd36a24459259bcab077eccbdde9117bd56c4a936fb74af6f18e5ea68bb64d94a65f6c8abef190c7cd48c7b4b39cb3f4e6054acac0c3bbd6b3556b3ec3c631dd2fffe8f66224d2d4eed972a38d3f80870e680914112a4fad507aaf816acade69afe5e078e4e92bcb6abdf76b1f80bcaafe243c8ba772be9e5a9378e6c499517464de8c7e96dfc118b985a09eae18b91ea9ae86aba46668ca9766f3bf1c037802de836d781c1e4f804d5374b4165c05c01391546d0e2ec8685013af1b2a27a9b5483bbdc22d57a7fbf5c498985d5443960af3822241af5a5e8f1c73db7cdf7bbfa3628e217e417c640206344805d3fb350707e4cbb24f03d7172e97564dc678dd84427f3b3b18ec8f9c6a81a522457c4d35780869bc663dac8d5d28ce5bf15d7ff76a58a3c1fee90704cfe3f7f03d7f3a206c346d7f55fe6f244a14f314a910266e7b191e9d1dd5319cd200c3448728543efed717f57653f951c78c156615393646736990ac80e7bbeef0cabd22eb4d0ee1cb2c231fd044ab1d1a38829506257eb80081d7ab93ab82d68611710f550e226e540b48a45cc17ac1c5328687b4378158dac610f235822c1a41e39e9c7526a38a9aad907e037a02591a131527e657b106d6cc89a88a990874824e9324e09771241c273694473947b2ccf83091266358461325a413d4ea8b86a2e4eb4e8d277bf46222694947fc669da67a75ef728a90ae043ea0572cc2279e81868a344b1bc50414437730d55e73ebe2cc7217b871079be192d90c3d94b836b266ddd194c2795d132bd3aaa0118717d30e40395bcb8cbc6342d5a10c20b985d935c26344cd2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">您好, 这里需要密码.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据结构与算法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
